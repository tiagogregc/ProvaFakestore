{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    login() {\n      // Lógica de autenticação\n      if (this.username === 'admin' && this.password === 'admin') {\n        // Em um cenário real, você provavelmente teria uma requisição de API para verificar a autenticação\n        localStorage.setItem('authToken', 'your_token_here'); // Armazenando o token no localStorage\n        this.$router.push('/'); // Redireciona para o Dashboard após login bem-sucedido\n      } else {\n        this.errorMessage = 'Credenciais inválidas.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","errorMessage","methods","login","localStorage","setItem","$router","push"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\views\\UserLogin.vue"],"sourcesContent":["<!-- src/views/UserLogin.vue -->\r\n<template>\r\n  <div class=\"container\">\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div class=\"form-group\">\r\n        <input\r\n            v-model=\"username\"\r\n            placeholder=\"Usuário\"\r\n            required\r\n            class=\"input-field\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n            v-model=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            required\r\n            class=\"input-field\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"login-button\">Entrar</button>\r\n      <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n// src/views/Login.vue\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      // Lógica de autenticação\r\n      if (this.username === 'admin' && this.password === 'admin') {\r\n        // Em um cenário real, você provavelmente teria uma requisição de API para verificar a autenticação\r\n        localStorage.setItem('authToken', 'your_token_here'); // Armazenando o token no localStorage\r\n        this.$router.push('/'); // Redireciona para o Dashboard após login bem-sucedido\r\n      } else {\r\n        this.errorMessage = 'Credenciais inválidas.';\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 20px;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.input-field:focus {\r\n  outline: none;\r\n  border-color: #3498db;\r\n  box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: white;\r\n  background-color: #3498db;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.error-message {\r\n  color: #e74c3c;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n</style>"],"mappings":";AA8BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN;MACA,IAAI,IAAI,CAACJ,QAAO,KAAM,OAAM,IAAK,IAAI,CAACC,QAAO,KAAM,OAAO,EAAE;QAC1D;QACAI,YAAY,CAACC,OAAO,CAAC,WAAW,EAAE,iBAAiB,CAAC,EAAE;QACtD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B,OAAO;QACL,IAAI,CAACN,YAAW,GAAI,wBAAwB;MAC9C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}