{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { mapState } from 'vuex';\nimport OrderTable from \"@/components/OrderTable.vue\";\nimport Modal from \"@/components/ModalMode.vue\";\nexport default {\n  name: \"OrderList\",\n  components: {\n    OrderTable,\n    Modal\n  },\n  data() {\n    return {\n      cart: [],\n      selectedOrder: null,\n      showModal: false\n    };\n  },\n  computed: {\n    ...mapState({\n      orders: state => state.orders || [] // Asegura que orders seja sempre um array\n    }),\n    cartTotal() {\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0); // Calcula com preço fixo, altere conforme necessário\n    }\n  },\n  methods: {\n    showOrderDetails(order) {\n      this.selectedOrder = order;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedOrder = null;\n    },\n    calculateTotal(order) {\n      return order.products.reduce((total, item) => total + item.quantity * item.product.price, 0); // Calcular com base no preço dos produtos\n    },\n    addProductToCart(productId, quantity) {\n      const product = this.cart.find(item => item.productId === productId);\n      if (product) {\n        product.quantity += quantity;\n      } else {\n        this.cart.push({\n          productId,\n          quantity\n        });\n      }\n    },\n    removeProductFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    placeOrder() {\n      const order = {\n        id: this.orders.length + 1,\n        userId: 1,\n        // Exemplo, pode vir do localStorage ou Vuex\n        date: new Date().toISOString(),\n        products: [...this.cart]\n      };\n      this.orders.push(order);\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Salva no localStorage\n      this.cart = []; // Limpa o carrinho\n      alert(\"Pedido realizado com sucesso!\");\n    },\n    editOrder(order) {\n      // Implementar a lógica de edição do pedido\n      alert(\"Edição do pedido não implementada ainda\");\n    },\n    deleteOrder(orderId) {\n      // Excluir o pedido\n      this.orders = this.orders.filter(order => order.id !== orderId);\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Atualiza no localStorage\n      this.closeModal(); // Fecha o modal\n      alert(\"Pedido excluído com sucesso!\");\n    }\n  }\n};","map":{"version":3,"names":["mapState","OrderTable","Modal","name","components","data","cart","selectedOrder","showModal","computed","orders","state","cartTotal","reduce","total","item","quantity","methods","showOrderDetails","order","closeModal","calculateTotal","products","product","price","addProductToCart","productId","find","push","removeProductFromCart","index","splice","placeOrder","id","length","userId","date","Date","toISOString","localStorage","setItem","JSON","stringify","alert","editOrder","deleteOrder","orderId","filter"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\views\\OrdersList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>Pedidos</h2>\r\n    <OrderTable :orders=\"orders\" @viewOrder=\"showOrderDetails\" />\r\n\r\n    <!-- Modal com os detalhes do pedido -->\r\n    <div v-if=\"showModal\" class=\"order-modal\">\r\n      <Modal @close=\"closeModal\">\r\n        <div v-if=\"selectedOrder\">\r\n          <h3>Pedido #{{ selectedOrder.id }}</h3>\r\n          <p><strong>Vendedor:</strong> {{ selectedOrder.user.firstname }} {{ selectedOrder.user.lastname }}</p>\r\n          <p><strong>Data:</strong> {{ selectedOrder.date }}</p>\r\n\r\n          <!-- Tabela de produtos do pedido -->\r\n          <div class=\"order-details\">\r\n            <table>\r\n              <thead>\r\n              <tr>\r\n                <th>Produto</th>\r\n                <th>Quantidade</th>\r\n                <th>Valor Unitário</th>\r\n                <th>Valor Produto</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(item, index) in selectedOrder.products\" :key=\"index\">\r\n                <td>{{ item.product.name }}</td>\r\n                <td>{{ item.quantity }}</td>\r\n                <td>{{ item.product.price }}</td>\r\n                <td>{{ item.quantity * item.product.price }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <h4><strong>Total do Pedido:</strong> {{ calculateTotal(selectedOrder) }}</h4>\r\n          </div>\r\n\r\n          <!-- Botões para alterar e excluir -->\r\n          <div class=\"modal-actions\">\r\n            <button @click=\"editOrder(selectedOrder)\">Alterar</button>\r\n            <button @click=\"deleteOrder(selectedOrder.id)\">Excluir</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n\r\n    <!-- Carrinho de compras -->\r\n    <div v-if=\"cart.length\" class=\"cart-summary\">\r\n      <h3>Carrinho</h3>\r\n      <ul>\r\n        <li v-for=\"(item, index) in cart\" :key=\"index\">\r\n          Produto {{ item.productId }} - Quantidade: {{ item.quantity }}\r\n          <button @click=\"removeProductFromCart(index)\">Remover</button>\r\n        </li>\r\n      </ul>\r\n      <p><strong>Total: </strong>{{ cartTotal }}</p>\r\n      <button @click=\"placeOrder\">Finalizar Pedido</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport OrderTable from \"@/components/OrderTable.vue\";\r\nimport Modal from \"@/components/ModalMode.vue\";\r\n\r\nexport default {\r\n  name: \"OrderList\",\r\n  components: {\r\n    OrderTable,\r\n    Modal,\r\n  },\r\n  data() {\r\n    return {\r\n      cart: [],\r\n      selectedOrder: null,\r\n      showModal: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      orders: (state) => state.orders || [], // Asegura que orders seja sempre um array\r\n    }),\r\n    cartTotal() {\r\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0); // Calcula com preço fixo, altere conforme necessário\r\n    },\r\n  },\r\n  methods: {\r\n    showOrderDetails(order) {\r\n      this.selectedOrder = order;\r\n      this.showModal = true;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.selectedOrder = null;\r\n    },\r\n    calculateTotal(order) {\r\n      return order.products.reduce((total, item) => total + item.quantity * item.product.price, 0); // Calcular com base no preço dos produtos\r\n    },\r\n    addProductToCart(productId, quantity) {\r\n      const product = this.cart.find(item => item.productId === productId);\r\n      if (product) {\r\n        product.quantity += quantity;\r\n      } else {\r\n        this.cart.push({ productId, quantity });\r\n      }\r\n    },\r\n    removeProductFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    placeOrder() {\r\n      const order = {\r\n        id: this.orders.length + 1,\r\n        userId: 1, // Exemplo, pode vir do localStorage ou Vuex\r\n        date: new Date().toISOString(),\r\n        products: [...this.cart],\r\n      };\r\n      this.orders.push(order);\r\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Salva no localStorage\r\n      this.cart = []; // Limpa o carrinho\r\n      alert(\"Pedido realizado com sucesso!\");\r\n    },\r\n    editOrder(order) {\r\n      // Implementar a lógica de edição do pedido\r\n      alert(\"Edição do pedido não implementada ainda\");\r\n    },\r\n    deleteOrder(orderId) {\r\n      // Excluir o pedido\r\n      this.orders = this.orders.filter(order => order.id !== orderId);\r\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Atualiza no localStorage\r\n      this.closeModal(); // Fecha o modal\r\n      alert(\"Pedido excluído com sucesso!\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n\r\n.order-modal {\r\n  margin-top: 20px;\r\n}\r\n\r\n.order-details {\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\nth, td {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\nbutton {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\n.modal-actions button {\r\n  width: 48%;\r\n}\r\n\r\n.cart-summary {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-summary ul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.cart-summary li {\r\n  margin: 5px 0;\r\n}\r\n</style>"],"mappings":";;;;;AA6DA,SAASA,QAAO,QAAS,MAAM;AAC/B,OAAOC,UAAS,MAAO,6BAA6B;AACpD,OAAOC,KAAI,MAAO,4BAA4B;AAE9C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVH,UAAU;IACVC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGT,QAAQ,CAAC;MACVU,MAAM,EAAGC,KAAK,IAAKA,KAAK,CAACD,MAAK,IAAK,EAAE,CAAE;IACzC,CAAC,CAAC;IACFE,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACN,IAAI,CAACO,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAO,GAAI,EAAE,EAAE,CAAC,CAAC,EAAE;IAC3E;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACZ,aAAY,GAAIY,KAAK;MAC1B,IAAI,CAACX,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDY,UAAUA,CAAA,EAAG;MACX,IAAI,CAACZ,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACD,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDc,cAAcA,CAACF,KAAK,EAAE;MACpB,OAAOA,KAAK,CAACG,QAAQ,CAACT,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAO,GAAID,IAAI,CAACQ,OAAO,CAACC,KAAK,EAAE,CAAC,CAAC,EAAE;IAChG,CAAC;IACDC,gBAAgBA,CAACC,SAAS,EAAEV,QAAQ,EAAE;MACpC,MAAMO,OAAM,GAAI,IAAI,CAACjB,IAAI,CAACqB,IAAI,CAACZ,IAAG,IAAKA,IAAI,CAACW,SAAQ,KAAMA,SAAS,CAAC;MACpE,IAAIH,OAAO,EAAE;QACXA,OAAO,CAACP,QAAO,IAAKA,QAAQ;MAC9B,OAAO;QACL,IAAI,CAACV,IAAI,CAACsB,IAAI,CAAC;UAAEF,SAAS;UAAEV;QAAS,CAAC,CAAC;MACzC;IACF,CAAC;IACDa,qBAAqBA,CAACC,KAAK,EAAE;MAC3B,IAAI,CAACxB,IAAI,CAACyB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC5B,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,MAAMb,KAAI,GAAI;QACZc,EAAE,EAAE,IAAI,CAACvB,MAAM,CAACwB,MAAK,GAAI,CAAC;QAC1BC,MAAM,EAAE,CAAC;QAAE;QACXC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC9BhB,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAChB,IAAI;MACzB,CAAC;MACD,IAAI,CAACI,MAAM,CAACkB,IAAI,CAACT,KAAK,CAAC;MACvBoB,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChC,MAAM,CAAC,CAAC,EAAE;MAC7D,IAAI,CAACJ,IAAG,GAAI,EAAE,EAAE;MAChBqC,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC;IACDC,SAASA,CAACzB,KAAK,EAAE;MACf;MACAwB,KAAK,CAAC,yCAAyC,CAAC;IAClD,CAAC;IACDE,WAAWA,CAACC,OAAO,EAAE;MACnB;MACA,IAAI,CAACpC,MAAK,GAAI,IAAI,CAACA,MAAM,CAACqC,MAAM,CAAC5B,KAAI,IAAKA,KAAK,CAACc,EAAC,KAAMa,OAAO,CAAC;MAC/DP,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAChC,MAAM,CAAC,CAAC,EAAE;MAC7D,IAAI,CAACU,UAAU,CAAC,CAAC,EAAE;MACnBuB,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}