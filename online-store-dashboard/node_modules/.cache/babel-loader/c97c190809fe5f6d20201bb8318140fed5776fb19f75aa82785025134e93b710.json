{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  name: 'OrderTable',\n  props: {\n    orders: {\n      type: Array,\n      required: true\n    },\n    products: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    viewOrder(order) {\n      if (order) {\n        this.$emit('viewOrder', order);\n      } else {\n        console.error('Pedido não encontrado');\n      }\n    },\n    calculateTotalQuantity(order) {\n      if (!order.products) return 0;\n      return order.products.reduce((total, item) => {\n        return total + (item.quantity || 0);\n      }, 0);\n    },\n    deleteOrder(orderId) {\n      this.$emit('deleteOrder', orderId);\n    },\n    formatDate(dateString) {\n      const options = {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(dateString).toLocaleDateString('pt-BR', options).replace(',', ' -');\n    },\n    calculateOrderTotal(products) {\n      if (!this.products || !products) {\n        console.error('Lista de produtos não está definida');\n        return 0;\n      }\n      return products.reduce((total, product) => {\n        const productPrice = this.getProductPrice(product.productId);\n        return total + product.quantity * productPrice;\n      }, 0);\n    },\n    getProductPrice(productId) {\n      const product = this.products.find(p => p.id === productId);\n      return product ? product.price : 0;\n    },\n    formatCurrency(value) {\n      return new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(value);\n    }\n  }\n};","map":{"version":3,"names":["name","props","orders","type","Array","required","products","methods","viewOrder","order","$emit","console","error","calculateTotalQuantity","reduce","total","item","quantity","deleteOrder","orderId","formatDate","dateString","options","day","month","year","hour","minute","Date","toLocaleDateString","replace","calculateOrderTotal","product","productPrice","getProductPrice","productId","find","p","id","price","formatCurrency","value","Intl","NumberFormat","style","currency","format"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\components\\OrderTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th class=\"centered\" style=\"width: 150px;\">ID</th>\r\n        <th class=\"centered\" style=\"width: 250px;\">Data</th>\r\n        <th class=\"centered quantity-column\">Quantidade de Produtos</th>\r\n        <th class=\"centered\" style=\"width: 300px;\">Valor Total do Pedido</th>\r\n        <th class=\"centered\" style=\"width: 300px;\">Ações</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"order in orders\" :key=\"order.id\">\r\n        <td class=\"centered\">{{ order.id }}</td>\r\n        <td class=\"centered\">{{ formatDate(order.date) }}</td>\r\n        <td class=\"centered\">{{ calculateTotalQuantity(order) }}</td>\r\n        <td class=\"centered\">{{ formatCurrency(calculateOrderTotal(order.products)) }}</td>\r\n        <td class=\"centered\">\r\n          <button class=\"edit-button\" @click=\"viewOrder(order)\">Editar</button>\r\n          <button class=\"delete-button\" @click=\"deleteOrder(order.id)\">Excluir</button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OrderTable',\r\n  props: {\r\n    orders: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    products: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    viewOrder(order) {\r\n      if (order) {\r\n        this.$emit('viewOrder', order);\r\n      } else {\r\n        console.error('Pedido não encontrado');\r\n      }\r\n    },\r\n    calculateTotalQuantity(order) {\r\n      if (!order.products) return 0;\r\n      return order.products.reduce((total, item) => {\r\n        return total + (item.quantity || 0);\r\n      }, 0);\r\n    },\r\n    deleteOrder(orderId) {\r\n      this.$emit('deleteOrder', orderId);\r\n    },\r\n    formatDate(dateString) {\r\n      const options = { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n      return new Date(dateString).toLocaleDateString('pt-BR', options).replace(',', ' -');\r\n    },\r\n    calculateOrderTotal(products) {\r\n      if (!this.products || !products) {\r\n        console.error('Lista de produtos não está definida');\r\n        return 0;\r\n      }\r\n      return products.reduce((total, product) => {\r\n        const productPrice = this.getProductPrice(product.productId);\r\n        return total + (product.quantity * productPrice);\r\n      }, 0);\r\n    },\r\n    getProductPrice(productId) {\r\n      const product = this.products.find(p => p.id === productId);\r\n      return product ? product.price : 0;\r\n    },\r\n    formatCurrency(value) {\r\n      return new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(value);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 20px;\r\n  max-width: 1400px; /* Aumenta a largura do container */\r\n  margin: 0 auto;\r\n}\r\n\r\nbutton {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  margin: 10px 0;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.table-container {\r\n  margin-top: 20px;\r\n  overflow-x: auto;\r\n}\r\n\r\ntable {\r\n  width: 1500px; /* Ajusta a largura total da tabela */\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 8px 12px;\r\n  text-align: center; /* Centraliza o texto nas células */\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.button {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 20px; /* Aumenta o tamanho dos botões */\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  margin: 0 5px; /* Espaço entre os botões */\r\n}\r\n\r\n.button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.delete-button {\r\n  background-color: #e74c3c; /* Trocar a cor do botão \"Excluir\" para vermelho */\r\n}\r\n\r\n.delete-button:hover {\r\n  background-color: #c0392b;\r\n}\r\n\r\n.edit-button {\r\n  background-color: #3498db; /* Mantém a cor do botão \"Editar\" */\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.centered {\r\n  text-align: center; /* Centraliza o texto nas colunas */\r\n}\r\n\r\n.quantity-column {\r\n  width: 40%; /* Diminui a largura da coluna Quantidade de Produtos para 40% do tamanho atual */\r\n}\r\n</style>"],"mappings":";;;AA6BA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,SAASA,CAACC,KAAK,EAAE;MACf,IAAIA,KAAK,EAAE;QACT,IAAI,CAACC,KAAK,CAAC,WAAW,EAAED,KAAK,CAAC;MAChC,OAAO;QACLE,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF,CAAC;IACDC,sBAAsBA,CAACJ,KAAK,EAAE;MAC5B,IAAI,CAACA,KAAK,CAACH,QAAQ,EAAE,OAAO,CAAC;MAC7B,OAAOG,KAAK,CAACH,QAAQ,CAACQ,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;QAC5C,OAAOD,KAAI,IAAKC,IAAI,CAACC,QAAO,IAAK,CAAC,CAAC;MACrC,CAAC,EAAE,CAAC,CAAC;IACP,CAAC;IACDC,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAI,CAACT,KAAK,CAAC,aAAa,EAAES,OAAO,CAAC;IACpC,CAAC;IACDC,UAAUA,CAACC,UAAU,EAAE;MACrB,MAAMC,OAAM,GAAI;QAAEC,GAAG,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC;MACzG,OAAO,IAAIC,IAAI,CAACP,UAAU,CAAC,CAACQ,kBAAkB,CAAC,OAAO,EAAEP,OAAO,CAAC,CAACQ,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC;IACrF,CAAC;IACDC,mBAAmBA,CAACzB,QAAQ,EAAE;MAC5B,IAAI,CAAC,IAAI,CAACA,QAAO,IAAK,CAACA,QAAQ,EAAE;QAC/BK,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;QACpD,OAAO,CAAC;MACV;MACA,OAAON,QAAQ,CAACQ,MAAM,CAAC,CAACC,KAAK,EAAEiB,OAAO,KAAK;QACzC,MAAMC,YAAW,GAAI,IAAI,CAACC,eAAe,CAACF,OAAO,CAACG,SAAS,CAAC;QAC5D,OAAOpB,KAAI,GAAKiB,OAAO,CAACf,QAAO,GAAIgB,YAAa;MAClD,CAAC,EAAE,CAAC,CAAC;IACP,CAAC;IACDC,eAAeA,CAACC,SAAS,EAAE;MACzB,MAAMH,OAAM,GAAI,IAAI,CAAC1B,QAAQ,CAAC8B,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMH,SAAS,CAAC;MAC3D,OAAOH,OAAM,GAAIA,OAAO,CAACO,KAAI,GAAI,CAAC;IACpC,CAAC;IACDC,cAAcA,CAACC,KAAK,EAAE;MACpB,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QAAEC,KAAK,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;IAC7F;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}