{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table-container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Data\"), _createElementVNode(\"th\", null, \"Valor Total\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Vendedor\"), _createCommentVNode(\" Nova coluna para o Vendedor \"), _createElementVNode(\"th\", null, \"Ações\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.calculateTotal(order)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.status || 'Pendente'), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getVendedorName(order.userId)), 1 /* TEXT */), _createCommentVNode(\" Exibe o vendedor \"), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.viewOrder(order)\n    }, \"Ver Detalhes\", 8 /* PROPS */, _hoisted_2)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_Fragment","_renderList","_ctx","orders","order","key","id","_toDisplayString","date","$options","calculateTotal","status","getVendedorName","userId","onClick","$event","viewOrder","_hoisted_2"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\components\\OrderTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Data</th>\r\n        <th>Valor Total</th>\r\n        <th>Status</th>\r\n        <th>Vendedor</th> <!-- Nova coluna para o Vendedor -->\r\n        <th>Ações</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"order in orders\" :key=\"order.id\">\r\n        <td>{{ order.id }}</td>\r\n        <td>{{ order.date }}</td>\r\n        <td>{{ calculateTotal(order) }}</td>\r\n        <td>{{ order.status || 'Pendente' }}</td>\r\n        <td>{{ getVendedorName(order.userId) }}</td> <!-- Exibe o vendedor -->\r\n        <td>\r\n          <button @click=\"viewOrder(order)\">Ver Detalhes</button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n  name: 'OrderTable',\r\n  computed: {\r\n    ...mapState(['orders', 'users']), // Acessa os pedidos e os usuários diretamente do Vuex\r\n  },\r\n  methods: {\r\n    // Método que envia o pedido para ser mostrado no modal de detalhes\r\n    viewOrder(order) {\r\n      if (order) {\r\n        this.$emit('viewOrder', order); // Emite o evento com o pedido selecionado\r\n      } else {\r\n        console.error('Pedido não encontrado');\r\n      }\r\n    },\r\n    // Método para calcular o valor total de um pedido\r\n    calculateTotal(order) {\r\n      if (!order.products) return 0;\r\n      return order.products.reduce((total, item) => {\r\n        const unitPrice = item.unitPrice || 0; // Valor padrão\r\n        return total + (item.quantity || 0) * unitPrice;\r\n      }, 0);\r\n    },\r\n    // Método para buscar o nome do vendedor\r\n    getVendedorName(userId) {\r\n      const user = this.users.find(user => user.id === userId);\r\n      return user ? `${user.firstName} ${user.lastName}` : 'Desconhecido';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  margin-top: 20px;\r\n  overflow-x: auto;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\nbutton {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;mBAD9B;;uBACEC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,CAuBQ,gB,0BAtBNA,mBAAA,CASQ,gBARRA,mBAAA,CAOK,aANHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAoB,YAAhB,aAAW,GACfA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAiB,YAAb,UAAQ,GAAMC,mBAAA,iCAAoC,EACtDD,mBAAA,CAAc,YAAV,OAAK,E,wBAGXA,mBAAA,CAWQ,iB,kBAVRF,mBAAA,CASKI,SAAA,QAvBXC,WAAA,CAc0BC,IAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBR,mBAAA,CASK;MATwBS,GAAG,EAAED,KAAK,CAACE;QACtCR,mBAAA,CAAuB,YAAAS,gBAAA,CAAhBH,KAAK,CAACE,EAAE,kBACfR,mBAAA,CAAyB,YAAAS,gBAAA,CAAlBH,KAAK,CAACI,IAAI,kBACjBV,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BE,QAAA,CAAAC,cAAc,CAACN,KAAK,mBAC3BN,mBAAA,CAAyC,YAAAS,gBAAA,CAAlCH,KAAK,CAACO,MAAM,gCACnBb,mBAAA,CAA4C,YAAAS,gBAAA,CAArCE,QAAA,CAAAG,eAAe,CAACR,KAAK,CAACS,MAAM,mBAAUd,mBAAA,sBAAyB,EACtED,mBAAA,CAEK,aADHA,mBAAA,CAAuD;MAA9CgB,OAAK,EAAAC,MAAA,IAAEN,QAAA,CAAAO,SAAS,CAACZ,KAAK;OAAG,cAAY,iBArBxDa,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}