{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"App\",\n  computed: {\n    // Usar Vuex para verificar se o usuário está autenticado\n    isAuthenticated() {\n      return this.$store.getters.isAuthenticated;\n    }\n  },\n  methods: {\n    logout() {\n      // Remove o token do localStorage\n      localStorage.removeItem(\"authToken\");\n\n      // Atualiza o estado de autenticação no Vuex\n      this.$store.commit(\"setAuthToken\", null);\n\n      // Redireciona para a página de login\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"names":["name","computed","isAuthenticated","$store","getters","methods","logout","localStorage","removeItem","commit","$router","push"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreProva\\online-store-dashboard\\src\\app.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Barra de navegação visível apenas se autenticado -->\n    <nav v-if=\"isAuthenticated\" class=\"navbar\">\n      <div class=\"navbar-container\">\n        <router-link to=\"/\" class=\"navbar-item\">Dashboard</router-link>\n        <router-link to=\"/Products\" class=\"navbar-item\">Produtos</router-link>\n        <router-link to=\"/Orders\" class=\"navbar-item\">Pedidos</router-link>\n        <router-link to=\"/Users\" class=\"navbar-item\">Usuários</router-link>\n        <button @click=\"logout\" class=\"navbar-item logout-button\">Logout</button>\n      </div>\n    </nav>\n\n    <!-- Conteúdo principal -->\n    <div class=\"main-content\">\n      <router-view />  <!-- Carrega o conteúdo da rota -->\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  computed: {\n    // Usar Vuex para verificar se o usuário está autenticado\n    isAuthenticated() {\n      return this.$store.getters.isAuthenticated;\n    },\n  },\n  methods: {\n    logout() {\n      // Remove o token do localStorage\n      localStorage.removeItem(\"authToken\");\n\n      // Atualiza o estado de autenticação no Vuex\n      this.$store.commit(\"setAuthToken\", null);\n\n      // Redireciona para a página de login\n      this.$router.push(\"/login\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos da navbar e conteúdo */\n.navbar {\n  background-color: #333;\n  padding: 1rem;\n}\n\n.navbar-item {\n  color: white;\n  text-decoration: none;\n  margin-right: 1rem;\n}\n\n.logout-button {\n  background-color: red;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\n.main-content {\n  padding: 20px;\n}\n</style>"],"mappings":";AAqBA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAE;IACR;IACAC,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACF,eAAe;IAC5C;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP;MACAC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;;MAEpC;MACA,IAAI,CAACL,MAAM,CAACM,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC;;MAExC;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}