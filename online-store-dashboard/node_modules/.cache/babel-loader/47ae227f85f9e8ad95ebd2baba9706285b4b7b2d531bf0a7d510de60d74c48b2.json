{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"navbar-container\"\n};\nconst _hoisted_3 = {\n  class: \"main-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Exibe a barra de navegação apenas se o usuário estiver autenticado \"), _createCommentVNode(\" <nav v-if=\\\"isAuthenticated\\\" class=\\\"navbar\\\">\"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_link, {\n    to: \"/dashboard\",\n    class: \"navbar-item\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"Dashboard\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/products\",\n    class: \"navbar-item\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Produtos\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/orders\",\n    class: \"navbar-item\"\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"Pedidos\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/users\",\n    class: \"navbar-item\"\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"Usuários\")])),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args)),\n    class: \"navbar-item logout-button\"\n  }, \" Logout \")]), _createCommentVNode(\"</nav>>\\n\\n    <!-- Conteúdo principal da aplicação \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_view)])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","onClick","args","$options","logout","_hoisted_3","_component_router_view"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\app.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Exibe a barra de navegação apenas se o usuário estiver autenticado -->\n    <!-- <nav v-if=\"isAuthenticated\" class=\"navbar\">-->\n      <div class=\"navbar-container\">\n        <router-link to=\"/dashboard\" class=\"navbar-item\">Dashboard</router-link>\n        <router-link to=\"/products\" class=\"navbar-item\">Produtos</router-link>\n        <router-link to=\"/orders\" class=\"navbar-item\">Pedidos</router-link>\n        <router-link to=\"/users\" class=\"navbar-item\">Usuários</router-link>\n        <button\n            @click=\"logout\"\n            class=\"navbar-item logout-button\"\n        >\n          Logout\n        </button>\n      </div>\n    <!--</nav>>\n\n    <!-- Conteúdo principal da aplicação -->\n    <div class=\"main-content\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  computed: {\n    // Verifica se o usuário está autenticado\n    isAuthenticated() {\n      return !!localStorage.getItem(\"authToken\");\n    },\n  },\n  methods: {\n    // Logout\n    logout() {\n      // Remove o token de autenticação do localStorage\n      localStorage.removeItem(\"authToken\");\n      // Redireciona para a página de login\n      this.$router.push(\"/\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Barra de navegação */\n.navbar {\n  background-color: #2c3e50;\n  padding: 15px 0;\n  color: white;\n}\n\n.navbar-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.navbar-item {\n  color: white;\n  text-decoration: none;\n  padding: 10px 20px;\n  margin: 0 10px;\n  font-size: 18px;\n  font-weight: bold;\n  transition: background-color 0.3s;\n}\n\n.navbar-item:hover {\n  background-color: #34495e;\n  border-radius: 5px;\n}\n\n.logout-button {\n  background-color: #e74c3c;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: bold;\n  transition: background-color 0.3s;\n}\n\n.logout-button:hover {\n  background-color: #c0392b;\n}\n\n/* Conteúdo principal */\n.main-content {\n  padding: 20px;\n  margin-top: 20px;\n}\n\n/* Estilo para dispositivos móveis */\n@media (max-width: 768px) {\n  .navbar-container {\n    flex-direction: column;\n  }\n\n  .navbar-item {\n    padding: 15px;\n    margin: 5px 0;\n  }\n}\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAGJC,KAAK,EAAC;AAAkB;;EAe1BA,KAAK,EAAC;AAAc;;;;uBAlB3BC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,wEAA2E,EAC3EA,mBAAA,oDAAmD,EACjDC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,YAAA,CAAwEC,sBAAA;IAA3DC,EAAE,EAAC,YAAY;IAACR,KAAK,EAAC;;IAL3CS,OAAA,EAAAC,QAAA,CAKyD,MAASC,MAAA,QAAAA,MAAA,OALlEC,gBAAA,CAKyD,WAAS,E;IALlEC,CAAA;MAMQP,YAAA,CAAsEC,sBAAA;IAAzDC,EAAE,EAAC,WAAW;IAACR,KAAK,EAAC;;IAN1CS,OAAA,EAAAC,QAAA,CAMwD,MAAQC,MAAA,QAAAA,MAAA,OANhEC,gBAAA,CAMwD,UAAQ,E;IANhEC,CAAA;MAOQP,YAAA,CAAmEC,sBAAA;IAAtDC,EAAE,EAAC,SAAS;IAACR,KAAK,EAAC;;IAPxCS,OAAA,EAAAC,QAAA,CAOsD,MAAOC,MAAA,QAAAA,MAAA,OAP7DC,gBAAA,CAOsD,SAAO,E;IAP7DC,CAAA;MAQQP,YAAA,CAAmEC,sBAAA;IAAtDC,EAAE,EAAC,QAAQ;IAACR,KAAK,EAAC;;IARvCS,OAAA,EAAAC,QAAA,CAQqD,MAAQC,MAAA,QAAAA,MAAA,OAR7DC,gBAAA,CAQqD,UAAQ,E;IAR7DC,CAAA;MASQT,mBAAA,CAKS;IAJJU,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;IACdf,KAAK,EAAC;KACT,UAED,E,GAEJG,mBAAA,wDAEwC,EACxCC,mBAAA,CAEM,OAFNc,UAEM,GADJZ,YAAA,CAAea,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}