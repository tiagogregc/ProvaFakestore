{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-details-modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"order-total\"\n};\nconst _hoisted_9 = {\n  class: \"modal-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"h3\", {\n    class: \"modal-title\"\n  }, \"Detalhes do Pedido\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.updateOrderDetails && $options.updateOrderDetails(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"table\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID Pedido\"), _createElementVNode(\"th\", null, \"Data e Hora\"), _createElementVNode(\"th\", null, \"Vendedor\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString($data.localOrder.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.localOrder.date), 1 /* TEXT */), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.localOrder.userId = $event),\n    class: \"modal-subtitle\",\n    required: \"\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.users, user => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: user.id,\n      value: user.id\n    }, _toDisplayString(user.name.firstname) + \" \" + _toDisplayString(user.name.lastname), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.localOrder.userId]])])])])]), _cache[7] || (_cache[7] = _createElementVNode(\"h4\", null, \"Produtos no Pedido\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Nome do Produto\"), _createElementVNode(\"th\", null, \"Quantidade\"), _createElementVNode(\"th\", null, \"Valor Unitário\"), _createElementVNode(\"th\", null, \"Valor Produto\"), _createElementVNode(\"th\", null, \"Ações\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.localOrder.products, (product, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => product.productId = $event,\n      required: \"\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.products, prod => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: prod.id,\n        value: prod.id\n      }, _toDisplayString(prod.title), 9 /* TEXT, PROPS */, _hoisted_5);\n    }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_4), [[_vModelSelect, product.productId]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => product.quantity = $event,\n      min: \"1\"\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, product.quantity]])]), _createElementVNode(\"td\", null, _toDisplayString($options.formatCurrency($options.getProductPrice(product.productId))), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatCurrency(product.quantity * $options.getProductPrice(product.productId))), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      type: \"button\",\n      onClick: $event => $options.removeProduct(index)\n    }, \"Remover\", 8 /* PROPS */, _hoisted_7)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"strong\", null, \"Valor Total do Pedido: \" + _toDisplayString($options.formatCurrency($options.calculateOrderTotal($data.localOrder.products))), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"add-product-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addProductField && $options.addProductField(...args))\n  }, \"Adicionar Produto\")]), _createElementVNode(\"div\", _hoisted_9, [_cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"save-button\"\n  }, \"Atualizar Pedido\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"cancel-button\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$emit('close'))\n  }, \"Cancelar\")])], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","updateOrderDetails","_toDisplayString","$data","localOrder","id","date","$event","userId","required","_Fragment","_renderList","$props","users","user","key","value","name","firstname","lastname","_hoisted_3","products","product","index","productId","prod","title","_hoisted_5","_hoisted_4","type","quantity","min","_hoisted_6","formatCurrency","getProductPrice","onClick","removeProduct","_hoisted_7","_hoisted_8","calculateOrderTotal","addProductField","_hoisted_9","_ctx","$emit"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\components\\OrderDetailsModal.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-details-modal\">\r\n    <div class=\"modal-content\">\r\n      <h3 class=\"modal-title\">Detalhes do Pedido</h3>\r\n      <form @submit.prevent=\"updateOrderDetails\">\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>ID Pedido</th>\r\n            <th>Data e Hora</th>\r\n            <th>Vendedor</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n            <td>{{ localOrder.id }}</td>\r\n            <td>{{ localOrder.date }}</td>\r\n            <td>\r\n              <select v-model=\"localOrder.userId\" class=\"modal-subtitle\" required>\r\n                <option v-for=\"user in users\" :key=\"user.id\" :value=\"user.id\">\r\n                  {{ user.name.firstname }} {{ user.name.lastname }}\r\n                </option>\r\n              </select>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <h4>Produtos no Pedido</h4>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>Nome do Produto</th>\r\n            <th>Quantidade</th>\r\n            <th>Valor Unitário</th>\r\n            <th>Valor Produto</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(product, index) in localOrder.products\" :key=\"index\">\r\n            <td>\r\n              <select v-model=\"product.productId\" required>\r\n                <option v-for=\"prod in products\" :key=\"prod.id\" :value=\"prod.id\">\r\n                  {{ prod.title }}\r\n                </option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <input type=\"number\" v-model=\"product.quantity\" min=\"1\" />\r\n            </td>\r\n            <td>\r\n              {{ formatCurrency(getProductPrice(product.productId)) }}\r\n            </td>\r\n            <td>\r\n              {{ formatCurrency(product.quantity * getProductPrice(product.productId)) }}\r\n            </td>\r\n            <td>\r\n              <button type=\"button\" @click=\"removeProduct(index)\">Remover</button>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"order-total\">\r\n          <strong>Valor Total do Pedido: {{ formatCurrency(calculateOrderTotal(localOrder.products)) }}</strong>\r\n          <button type=\"button\" class=\"add-product-button\" @click=\"addProductField\">Adicionar Produto</button>\r\n        </div>\r\n\r\n        <div class=\"modal-buttons\">\r\n          <button type=\"submit\" class=\"save-button\">Atualizar Pedido</button>\r\n          <button type=\"button\" class=\"cancel-button\" @click=\"$emit('close')\">Cancelar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OrderDetailsModal',\r\n  props: {\r\n    order: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    user: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    products: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    users: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      localOrder: JSON.parse(JSON.stringify(this.order)), // Faz uma cópia profunda do pedido\r\n    };\r\n  },\r\n  methods: {\r\n    updateOrderDetails() {\r\n      this.$emit('updateOrder', this.localOrder);\r\n      this.$emit('close');\r\n    },\r\n    addProductField() {\r\n      this.localOrder.products.push({ productId: '', productName: '', quantity: 1 });\r\n    },\r\n    removeProduct(index) {\r\n      this.localOrder.products.splice(index, 1);\r\n    },\r\n    getProductPrice(productId) {\r\n      const product = this.products.find(p => p.id === productId);\r\n      return product ? product.price : 0;\r\n    },\r\n    calculateOrderTotal(products) {\r\n      return products.reduce((total, product) => total + (product.quantity * this.getProductPrice(product.productId)), 0);\r\n    },\r\n    formatCurrency(value) {\r\n      return new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(value);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.order-details-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  max-width: 1200px; /* Aumenta o tamanho do modal */\r\n  width: 100%;\r\n  margin: auto; /* Centraliza o modal verticalmente */\r\n  display: flex;\r\n  flex-direction: column; /* Garante que o conteúdo do modal seja empilhado verticalmente */\r\n  align-items: center; /* Centraliza o conteúdo do modal horizontalmente */\r\n}\r\n\r\n.modal-title {\r\n  font-size: 28px; /* Aumenta a fonte do título */\r\n  margin-bottom: 20px; /* Adiciona margem inferior */\r\n}\r\n\r\n.modal-subtitle {\r\n  font-size: 20px; /* Aumenta a fonte do subtítulo */\r\n  margin-bottom: 20px; /* Adiciona margem inferior */\r\n  display: block;\r\n}\r\n\r\nselect {\r\n  font-size: 18px; /* Diminui a fonte da dropbox */\r\n}\r\n\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%; /* Garante que os botões ocupem a largura total do modal */\r\n  margin-top: 20px;\r\n}\r\n\r\n.save-button {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: #c0392b;\r\n}\r\n\r\n.add-product-button {\r\n  background-color: #2ecc71; /* Define a cor verde para o botão */\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  margin-left: 20px; /* Adiciona espaço à esquerda do botão */\r\n}\r\n\r\n.add-product-button:hover {\r\n  background-color: #27ae60; /* Cor verde mais escura ao passar o mouse */\r\n}\r\n\r\n.order-total {\r\n  margin-top: 20px;\r\n  font-size: 1.2em;\r\n  text-align: right;\r\n  display: flex; /* Exibe em linha */\r\n  align-items: center; /* Alinha verticalmente ao centro */\r\n  justify-content: flex-end; /* Alinha horizontalmente à direita */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}