{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    products: JSON.parse(localStorage.getItem('products')) || [],\n    // Carrega os produtos do localStorage, se existirem\n    orders: [],\n    users: [],\n    authToken: localStorage.getItem('authToken') || null\n  },\n  mutations: {\n    setProducts(state, products) {\n      state.products = products;\n      localStorage.setItem('products', JSON.stringify(products)); // Persiste os produtos no localStorage\n    },\n    addProduct(state, product) {\n      state.products.push(product);\n      localStorage.setItem('products', JSON.stringify(state.products)); // Persiste após adicionar\n    },\n    removeProduct(state, productId) {\n      state.products = state.products.filter(product => product.id !== productId);\n      localStorage.setItem('products', JSON.stringify(state.products)); // Persiste após remoção\n    },\n    updateProduct(state, updatedProduct) {\n      const index = state.products.findIndex(product => product.id === updatedProduct.id);\n      if (index !== -1) {\n        state.products.splice(index, 1, updatedProduct);\n        localStorage.setItem('products', JSON.stringify(state.products)); // Persiste após atualização\n      }\n    },\n    setOrders(state, orders) {\n      state.orders = orders;\n    },\n    setUsers(state, users) {\n      state.users = users;\n    },\n    setAuthToken(state, token) {\n      state.authToken = token;\n      if (token) {\n        localStorage.setItem('authToken', token);\n      } else {\n        localStorage.removeItem('authToken');\n      }\n    }\n  },\n  actions: {\n    async fetchProducts({\n      commit\n    }) {\n      try {\n        const response = await axios.get('https://fakestoreapi.com/products');\n        commit('setProducts', response.data);\n      } catch (error) {\n        console.error('Erro ao buscar produtos:', error);\n      }\n    },\n    async fetchOrders({\n      commit\n    }) {\n      try {\n        const response = await axios.get('https://fakestoreapi.com/carts');\n        commit('setOrders', response.data);\n      } catch (error) {\n        console.error('Erro ao buscar pedidos:', error);\n      }\n    },\n    async fetchUsers({\n      commit\n    }) {\n      try {\n        const response = await axios.get('https://fakestoreapi.com/users');\n        commit('setUsers', response.data);\n      } catch (error) {\n        console.error('Erro ao buscar usuários:', error);\n      }\n    },\n    async login({\n      commit\n    }, credentials) {\n      try {\n        const response = await axios.post('https://fakestoreapi.com/auth/login', credentials);\n        commit('setAuthToken', response.data.token);\n      } catch (error) {\n        console.error('Erro no login:', error);\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('setAuthToken', null);\n    },\n    addProduct({\n      commit\n    }, product) {\n      commit('addProduct', product);\n    },\n    removeProduct({\n      commit\n    }, productId) {\n      commit('removeProduct', productId);\n    },\n    updateProduct({\n      commit\n    }, updatedProduct) {\n      commit('updateProduct', updatedProduct);\n    }\n  },\n  getters: {\n    isAuthenticated(state) {\n      return !!state.authToken;\n    },\n    getAllProducts(state) {\n      return state.products;\n    },\n    getProductById: state => id => {\n      return state.products.find(product => product.id === id);\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","state","products","JSON","parse","localStorage","getItem","orders","users","authToken","mutations","setProducts","setItem","stringify","addProduct","product","push","removeProduct","productId","filter","id","updateProduct","updatedProduct","index","findIndex","splice","setOrders","setUsers","setAuthToken","token","removeItem","actions","fetchProducts","commit","response","get","data","error","console","fetchOrders","fetchUsers","login","credentials","post","logout","getters","isAuthenticated","getAllProducts","getProductById","find"],"sources":["C:/Users/tiago/WebstormProjects/FakestoreS/online-store-dashboard/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default createStore({\r\n    state: {\r\n        products: JSON.parse(localStorage.getItem('products')) || [], // Carrega os produtos do localStorage, se existirem\r\n        orders: [],\r\n        users: [],\r\n        authToken: localStorage.getItem('authToken') || null,\r\n    },\r\n    mutations: {\r\n        setProducts(state, products) {\r\n            state.products = products;\r\n            localStorage.setItem('products', JSON.stringify(products)); // Persiste os produtos no localStorage\r\n        },\r\n        addProduct(state, product) {\r\n            state.products.push(product);\r\n            localStorage.setItem('products', JSON.stringify(state.products)); // Persiste após adicionar\r\n        },\r\n        removeProduct(state, productId) {\r\n            state.products = state.products.filter(product => product.id !== productId);\r\n            localStorage.setItem('products', JSON.stringify(state.products)); // Persiste após remoção\r\n        },\r\n        updateProduct(state, updatedProduct) {\r\n            const index = state.products.findIndex(product => product.id === updatedProduct.id);\r\n            if (index !== -1) {\r\n                state.products.splice(index, 1, updatedProduct);\r\n                localStorage.setItem('products', JSON.stringify(state.products)); // Persiste após atualização\r\n            }\r\n        },\r\n        setOrders(state, orders) {\r\n            state.orders = orders;\r\n        },\r\n        setUsers(state, users) {\r\n            state.users = users;\r\n        },\r\n        setAuthToken(state, token) {\r\n            state.authToken = token;\r\n            if (token) {\r\n                localStorage.setItem('authToken', token);\r\n            } else {\r\n                localStorage.removeItem('authToken');\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        async fetchProducts({ commit }) {\r\n            try {\r\n                const response = await axios.get('https://fakestoreapi.com/products');\r\n                commit('setProducts', response.data);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar produtos:', error);\r\n            }\r\n        },\r\n        async fetchOrders({ commit }) {\r\n            try {\r\n                const response = await axios.get('https://fakestoreapi.com/carts');\r\n                commit('setOrders', response.data);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar pedidos:', error);\r\n            }\r\n        },\r\n        async fetchUsers({ commit }) {\r\n            try {\r\n                const response = await axios.get('https://fakestoreapi.com/users');\r\n                commit('setUsers', response.data);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar usuários:', error);\r\n            }\r\n        },\r\n        async login({ commit }, credentials) {\r\n            try {\r\n                const response = await axios.post('https://fakestoreapi.com/auth/login', credentials);\r\n                commit('setAuthToken', response.data.token);\r\n            } catch (error) {\r\n                console.error('Erro no login:', error);\r\n            }\r\n        },\r\n        logout({ commit }) {\r\n            commit('setAuthToken', null);\r\n        },\r\n        addProduct({ commit }, product) {\r\n            commit('addProduct', product);\r\n        },\r\n        removeProduct({ commit }, productId) {\r\n            commit('removeProduct', productId);\r\n        },\r\n        updateProduct({ commit }, updatedProduct) {\r\n            commit('updateProduct', updatedProduct);\r\n        },\r\n    },\r\n    getters: {\r\n        isAuthenticated(state) {\r\n            return !!state.authToken;\r\n        },\r\n        getAllProducts(state) {\r\n            return state.products;\r\n        },\r\n        getProductById: (state) => (id) => {\r\n            return state.products.find(product => product.id === id);\r\n        },\r\n    },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}