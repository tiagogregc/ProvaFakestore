{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport OrderTable from \"@/components/OrderTable.vue\";\nimport ModalCart from \"@/components/ModalCart.vue\";\nimport OrderDetailsModal from \"@/components/OrderDetailsModal.vue\";\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: \"OrderList\",\n  components: {\n    OrderTable,\n    ModalCart,\n    OrderDetailsModal\n  },\n  data() {\n    return {\n      showCartModal: false,\n      showOrderDetailsModal: false,\n      showNewOrderModal: false,\n      selectedOrder: null,\n      selectedOrderUser: null,\n      newOrder: {\n        userId: '',\n        products: [{\n          productId: '',\n          quantity: ''\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapState(['orders', 'products', 'users', 'cart']),\n    cartTotal() {\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0); // Assumindo preço unitário de 10\n    }\n  },\n  methods: {\n    ...mapActions(['fetchOrders', 'fetchProducts', 'fetchUsers', 'addOrder', 'updateOrder', 'deleteOrder']),\n    openCartModal() {\n      this.showCartModal = true;\n    },\n    closeCartModal() {\n      this.showCartModal = false;\n    },\n    openNewOrderModal() {\n      this.showNewOrderModal = true;\n    },\n    closeNewOrderModal() {\n      this.showNewOrderModal = false;\n    },\n    removeProductFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    placeOrder() {\n      const newOrder = {\n        id: this.orders.length + 1,\n        userId: 1,\n        date: new Date().toISOString(),\n        products: [...this.cart]\n      };\n      this.addOrder(newOrder);\n      this.cart = [];\n      alert(\"Pedido realizado com sucesso!\");\n      this.closeCartModal();\n    },\n    addProductField() {\n      this.newOrder.products.push({\n        productId: '',\n        quantity: ''\n      });\n    },\n    addNewOrder() {\n      const newOrder = {\n        ...this.newOrder,\n        id: this.orders.length + 1,\n        date: new Date().toISOString()\n      };\n      this.addOrder(newOrder);\n      this.newOrder = {\n        userId: '',\n        products: [{\n          productId: '',\n          quantity: ''\n        }]\n      };\n      this.showNewOrderModal = false;\n      alert(\"Novo pedido adicionado com sucesso!\");\n    },\n    showOrderDetails(order) {\n      this.selectedOrder = {\n        ...order,\n        products: order.products.map(product => {\n          const productDetails = this.products.find(p => p.id === product.productId);\n          return {\n            ...product,\n            productName: productDetails ? productDetails.title : 'Produto desconhecido'\n          };\n        })\n      };\n      this.selectedOrderUser = this.fetchUserById(order.userId);\n      this.showOrderDetailsModal = true;\n    },\n    fetchUserById(userId) {\n      const user = this.users.find(user => user.id === userId);\n      return user ? {\n        firstName: user.name.firstname,\n        lastName: user.name.lastname\n      } : {\n        firstName: 'Desconhecido',\n        lastName: ''\n      };\n    },\n    closeOrderDetailsModal() {\n      this.showOrderDetailsModal = false;\n    },\n    deleteOrder(orderId) {\n      this.deleteOrder(orderId);\n      alert(\"Pedido excluído com sucesso!\");\n    },\n    updateOrder(updatedOrder) {\n      this.updateOrder(updatedOrder);\n      alert(\"Pedido atualizado com sucesso!\");\n    }\n  },\n  created() {\n    this.fetchOrders();\n    this.fetchProducts();\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["OrderTable","ModalCart","OrderDetailsModal","mapState","mapActions","name","components","data","showCartModal","showOrderDetailsModal","showNewOrderModal","selectedOrder","selectedOrderUser","newOrder","userId","products","productId","quantity","computed","cartTotal","cart","reduce","total","item","methods","openCartModal","closeCartModal","openNewOrderModal","closeNewOrderModal","removeProductFromCart","index","splice","placeOrder","id","orders","length","date","Date","toISOString","addOrder","alert","addProductField","push","addNewOrder","showOrderDetails","order","map","product","productDetails","find","p","productName","title","fetchUserById","user","users","firstName","firstname","lastName","lastname","closeOrderDetailsModal","deleteOrder","orderId","updateOrder","updatedOrder","created","fetchOrders","fetchProducts","fetchUsers"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\views\\OrdersList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>Pedidos</h2>\r\n    <button @click=\"openNewOrderModal\">Adicionar Novo Pedido</button>\r\n    <OrderTable :orders=\"orders\" @viewOrder=\"showOrderDetails\" @deleteOrder=\"deleteOrder\" />\r\n\r\n    <!-- Modal para Carrinho -->\r\n    <div v-if=\"showCartModal\" class=\"cart-modal\">\r\n      <ModalCart\r\n          :cart=\"cart\"\r\n          :cartTotal=\"cartTotal\"\r\n          :user=\"user\"\r\n          @close=\"closeCartModal\"\r\n          @remove-product=\"removeProductFromCart\"\r\n          @place-order=\"placeOrder\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Modal de Novo Pedido -->\r\n    <div v-if=\"showNewOrderModal\" class=\"new-order-modal\">\r\n      <div class=\"modal-content\">\r\n        <h3>Novo Pedido</h3>\r\n        <form @submit.prevent=\"addNewOrder\">\r\n          <label for=\"userId\">Vendedor:</label>\r\n          <select v-model=\"newOrder.userId\" required>\r\n            <option v-for=\"user in users\" :key=\"user.id\" :value=\"user.id\">\r\n              {{ user.name.firstname }} {{ user.name.lastname }}\r\n            </option>\r\n          </select>\r\n\r\n          <label for=\"products\">Produtos:</label>\r\n          <div v-for=\"(product, index) in newOrder.products\" :key=\"index\">\r\n            <select v-model=\"product.productId\" required>\r\n              <option v-for=\"prod in products\" :key=\"prod.id\" :value=\"prod.id\">\r\n                {{ prod.title }}\r\n              </option>\r\n            </select>\r\n            <input type=\"number\" v-model=\"product.quantity\" placeholder=\"Quantidade\" required />\r\n          </div>\r\n          <button type=\"button\" @click=\"addProductField\">Adicionar Produto</button>\r\n\r\n          <button type=\"submit\">Salvar Pedido</button>\r\n        </form>\r\n        <button @click=\"closeNewOrderModal\">Fechar</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal de Detalhes do Pedido -->\r\n    <OrderDetailsModal\r\n        v-if=\"showOrderDetailsModal\"\r\n        :order=\"selectedOrder\"\r\n        :user=\"selectedOrderUser\"\r\n        @close=\"closeOrderDetailsModal\"\r\n        @updateOrder=\"updateOrder\"\r\n        :products=\"products\"\r\n    />\r\n\r\n    <div v-if=\"cart.length\" class=\"cart-summary\">\r\n      <h3>Carrinho</h3>\r\n      <ul>\r\n        <li v-for=\"(item, index) in cart\" :key=\"index\">\r\n          Produto {{ item.productId }} - Quantidade: {{ item.quantity }}\r\n          <button @click=\"removeProductFromCart(index)\">Remover</button>\r\n        </li>\r\n      </ul>\r\n      <p><strong>Total:</strong> {{ cartTotal }}</p>\r\n      <button @click=\"openCartModal\">Ver Carrinho</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport OrderTable from \"@/components/OrderTable.vue\";\r\nimport ModalCart from \"@/components/ModalCart.vue\";\r\nimport OrderDetailsModal from \"@/components/OrderDetailsModal.vue\";\r\nimport { mapState, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  name: \"OrderList\",\r\n  components: {\r\n    OrderTable,\r\n    ModalCart,\r\n    OrderDetailsModal,\r\n  },\r\n  data() {\r\n    return {\r\n      showCartModal: false,\r\n      showOrderDetailsModal: false,\r\n      showNewOrderModal: false,\r\n      selectedOrder: null,\r\n      selectedOrderUser: null,\r\n      newOrder: {\r\n        userId: '',\r\n        products: [{ productId: '', quantity: '' }],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['orders', 'products', 'users', 'cart']),\r\n    cartTotal() {\r\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0); // Assumindo preço unitário de 10\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchOrders', 'fetchProducts', 'fetchUsers', 'addOrder', 'updateOrder', 'deleteOrder']),\r\n    openCartModal() {\r\n      this.showCartModal = true;\r\n    },\r\n    closeCartModal() {\r\n      this.showCartModal = false;\r\n    },\r\n    openNewOrderModal() {\r\n      this.showNewOrderModal = true;\r\n    },\r\n    closeNewOrderModal() {\r\n      this.showNewOrderModal = false;\r\n    },\r\n    removeProductFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    placeOrder() {\r\n      const newOrder = {\r\n        id: this.orders.length + 1,\r\n        userId: 1,\r\n        date: new Date().toISOString(),\r\n        products: [...this.cart],\r\n      };\r\n      this.addOrder(newOrder);\r\n      this.cart = [];\r\n      alert(\"Pedido realizado com sucesso!\");\r\n      this.closeCartModal();\r\n    },\r\n    addProductField() {\r\n      this.newOrder.products.push({ productId: '', quantity: '' });\r\n    },\r\n    addNewOrder() {\r\n      const newOrder = {\r\n        ...this.newOrder,\r\n        id: this.orders.length + 1,\r\n        date: new Date().toISOString(),\r\n      };\r\n      this.addOrder(newOrder);\r\n      this.newOrder = { userId: '', products: [{ productId: '', quantity: '' }] };\r\n      this.showNewOrderModal = false;\r\n      alert(\"Novo pedido adicionado com sucesso!\");\r\n    },\r\n    showOrderDetails(order) {\r\n      this.selectedOrder = {\r\n        ...order,\r\n        products: order.products.map(product => {\r\n          const productDetails = this.products.find(p => p.id === product.productId);\r\n          return {\r\n            ...product,\r\n            productName: productDetails ? productDetails.title : 'Produto desconhecido',\r\n          };\r\n        }),\r\n      };\r\n      this.selectedOrderUser = this.fetchUserById(order.userId);\r\n      this.showOrderDetailsModal = true;\r\n    },\r\n    fetchUserById(userId) {\r\n      const user = this.users.find(user => user.id === userId);\r\n      return user ? { firstName: user.name.firstname, lastName: user.name.lastname } : { firstName: 'Desconhecido', lastName: '' };\r\n    },\r\n    closeOrderDetailsModal() {\r\n      this.showOrderDetailsModal = false;\r\n    },\r\n    deleteOrder(orderId) {\r\n      this.deleteOrder(orderId);\r\n      alert(\"Pedido excluído com sucesso!\");\r\n    },\r\n    updateOrder(updatedOrder) {\r\n      this.updateOrder(updatedOrder);\r\n      alert(\"Pedido atualizado com sucesso!\");\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchOrders();\r\n    this.fetchProducts();\r\n    this.fetchUsers();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\nbutton {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  margin: 10px 0;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.table-container {\r\n  margin-top: 20px;\r\n  overflow-x: auto;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 8px 12px;\r\n  text-align: center;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.centered {\r\n  text-align: center;\r\n}\r\n\r\n.cart-summary {\r\n  margin-top: 20px;\r\n  background-color: #f4f4f4;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-summary ul {\r\n  list-style: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.cart-summary li {\r\n  margin: 5px 0;\r\n}\r\n\r\n.cart-modal, .new-order-modal, .order-details-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  max-width: 700px;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}