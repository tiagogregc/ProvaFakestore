{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Dashboard from '../views/DashboardPage.vue';\nimport Products from '../views/ProductList.vue';\nimport Orders from '../views/OrdersList.vue';\nimport Users from '../views/UserList.vue';\nimport Login from '../views/UserLogin.vue';\nconst routes = [{\n  path: '/',\n  name: 'UserLogin',\n  component: Login\n}, {\n  path: '/dashboard',\n  name: 'DashboardPage',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/products',\n  name: 'ProductList',\n  component: Products,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/orders',\n  name: 'OrderList',\n  component: Orders,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/users',\n  name: 'UserList',\n  component: Users,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = !!localStorage.getItem('authToken');\n  console.log(`Navegando para: ${to.fullPath}, autenticado: ${isAuthenticated}`);\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    next({\n      name: 'UserLogin'\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Dashboard","Products","Orders","Users","Login","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","console","log","fullPath"],"sources":["C:/Users/tiago/WebstormProjects/FakestoreS/online-store-dashboard/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport Dashboard from '../views/DashboardPage.vue';\r\nimport Products from '../views/ProductList.vue';\r\nimport Orders from '../views/OrdersList.vue';\r\nimport Users from '../views/UserList.vue';\r\nimport Login from '../views/UserLogin.vue';\r\n\r\nconst routes = [\r\n    { path: '/', name: 'UserLogin', component: Login },\r\n    { path: '/dashboard', name: 'DashboardPage', component: Dashboard, meta: { requiresAuth: true } },\r\n    { path: '/products', name: 'ProductList', component: Products, meta: { requiresAuth: true } },\r\n    { path: '/orders', name: 'OrderList', component: Orders, meta: { requiresAuth: true } },\r\n    { path: '/users', name: 'UserList', component: Users, meta: { requiresAuth: true } },\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    const isAuthenticated = !!localStorage.getItem('authToken');\r\n    console.log(`Navegando para: ${to.fullPath}, autenticado: ${isAuthenticated}`);\r\n\r\n    if (to.meta.requiresAuth && !isAuthenticated) {\r\n        next({ name: 'UserLogin' });\r\n    } else {\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,KAAK,MAAM,wBAAwB;AAE1C,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEJ;AAAM,CAAC,EAClD;EAAEE,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAER,SAAS;EAAES,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACjG;EAAEJ,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEP,QAAQ;EAAEQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EAC7F;EAAEJ,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEN,MAAM;EAAEO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,EACvF;EAAEJ,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEL,KAAK;EAAEM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAAE,CAAC,CACvF;AAED,MAAMC,MAAM,GAAGb,YAAY,CAAC;EACxBc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3BM;AACJ,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC3DC,OAAO,CAACC,GAAG,CAAC,mBAAmBP,EAAE,CAACQ,QAAQ,kBAAkBL,eAAe,EAAE,CAAC;EAE9E,IAAIH,EAAE,CAACL,IAAI,CAACC,YAAY,IAAI,CAACO,eAAe,EAAE;IAC1CD,IAAI,CAAC;MAAET,IAAI,EAAE;IAAY,CAAC,CAAC;EAC/B,CAAC,MAAM;IACHS,IAAI,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}