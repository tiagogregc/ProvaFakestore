{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"order-modal\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"order-details\"\n};\nconst _hoisted_5 = {\n  class: \"order-actions\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"cart-summary\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_OrderTable = _resolveComponent(\"OrderTable\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Pedidos\", -1 /* HOISTED */)), _createCommentVNode(\" Exibindo tabela de pedidos e ouvindo o evento para exibir detalhes \"), _createVNode(_component_OrderTable, {\n    orders: $data.orders,\n    onViewOrder: $options.showOrderDetails\n  }, null, 8 /* PROPS */, [\"orders\", \"onViewOrder\"]), _createCommentVNode(\" Modal para exibir detalhes do pedido \"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_Modal, {\n    onClose: $options.closeModal\n  }, {\n    default: _withCtx(() => [$data.selectedOrder ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, \"Pedido \" + _toDisplayString($data.selectedOrder.id), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Vendedor:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedOrder.user.firstname) + \" \" + _toDisplayString($data.selectedOrder.user.lastname), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Data e Hora:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedOrder.date), 1 /* TEXT */)]), _createCommentVNode(\" Tabela com detalhes do pedido \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Produto\"), _createElementVNode(\"th\", null, \"Quantidade\"), _createElementVNode(\"th\", null, \"Valor Unitário\"), _createElementVNode(\"th\", null, \"Valor Produto\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedOrder.products, (item, index) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: index\n      }, [_createElementVNode(\"td\", null, _toDisplayString(item.productName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.unitPrice), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.quantity * item.unitPrice), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"h4\", null, \"Total do Pedido: \" + _toDisplayString($options.calculateTotal($data.selectedOrder)), 1 /* TEXT */)]), _createCommentVNode(\" Botões para ações de editar ou excluir o pedido \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = $event => $options.editOrder($data.selectedOrder))\n    }, \"Alterar Pedido\"), _createElementVNode(\"button\", {\n      onClick: _cache[1] || (_cache[1] = $event => $options.deleteOrder($data.selectedOrder))\n    }, \"Excluir Pedido\")])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClose\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Exibição do carrinho de compras \"), $data.cart.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Carrinho\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cart, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createTextVNode(\" Produto \" + _toDisplayString(item.productId) + \" - Quantidade: \" + _toDisplayString(item.quantity) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeProductFromCart(index)\n    }, \"Remover\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Total: \", -1 /* HOISTED */)), _createTextVNode(_toDisplayString($options.cartTotal), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.placeOrder && $options.placeOrder(...args))\n  }, \"Finalizar Pedido\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_createVNode","_component_OrderTable","orders","$data","onViewOrder","$options","showOrderDetails","showModal","_hoisted_2","_component_Modal","onClose","closeModal","default","_withCtx","selectedOrder","_hoisted_3","_toDisplayString","id","_createTextVNode","user","firstname","lastname","date","_hoisted_4","_Fragment","_renderList","products","item","index","productName","quantity","unitPrice","calculateTotal","_hoisted_5","onClick","_cache","$event","editOrder","deleteOrder","_","cart","length","_hoisted_6","productId","removeProductFromCart","_hoisted_7","cartTotal","args","placeOrder"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\views\\OrdersList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>Pedidos</h2>\r\n    <!-- Exibindo tabela de pedidos e ouvindo o evento para exibir detalhes -->\r\n    <OrderTable :orders=\"orders\" @viewOrder=\"showOrderDetails\" />\r\n\r\n    <!-- Modal para exibir detalhes do pedido -->\r\n    <div v-if=\"showModal\" class=\"order-modal\">\r\n      <Modal @close=\"closeModal\">\r\n        <div v-if=\"selectedOrder\">\r\n          <h3>Pedido {{ selectedOrder.id }}</h3>\r\n          <p><strong>Vendedor:</strong> {{ selectedOrder.user.firstname }} {{ selectedOrder.user.lastname }}</p>\r\n          <p><strong>Data e Hora:</strong> {{ selectedOrder.date }}</p>\r\n\r\n          <!-- Tabela com detalhes do pedido -->\r\n          <div class=\"order-details\">\r\n            <table>\r\n              <thead>\r\n              <tr>\r\n                <th>Produto</th>\r\n                <th>Quantidade</th>\r\n                <th>Valor Unitário</th>\r\n                <th>Valor Produto</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(item, index) in selectedOrder.products\" :key=\"index\">\r\n                <td>{{ item.productName }}</td>\r\n                <td>{{ item.quantity }}</td>\r\n                <td>{{ item.unitPrice }}</td>\r\n                <td>{{ item.quantity * item.unitPrice }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <h4>Total do Pedido: {{ calculateTotal(selectedOrder) }}</h4>\r\n          </div>\r\n\r\n          <!-- Botões para ações de editar ou excluir o pedido -->\r\n          <div class=\"order-actions\">\r\n            <button @click=\"editOrder(selectedOrder)\">Alterar Pedido</button>\r\n            <button @click=\"deleteOrder(selectedOrder)\">Excluir Pedido</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n\r\n    <!-- Exibição do carrinho de compras -->\r\n    <div v-if=\"cart.length\" class=\"cart-summary\">\r\n      <h3>Carrinho</h3>\r\n      <ul>\r\n        <li v-for=\"(item, index) in cart\" :key=\"index\">\r\n          Produto {{ item.productId }} - Quantidade: {{ item.quantity }}\r\n          <button @click=\"removeProductFromCart(index)\">Remover</button>\r\n        </li>\r\n      </ul>\r\n      <p><strong>Total: </strong>{{ cartTotal }}</p>\r\n      <button @click=\"placeOrder\">Finalizar Pedido</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport OrderTable from \"@/components/OrderTable.vue\";\r\nimport Modal from \"@/components/ModalMode.vue\";\r\n\r\nexport default {\r\n  name: \"OrderList\",\r\n  components: {\r\n    OrderTable,\r\n    Modal,\r\n  },\r\n  data() {\r\n    return {\r\n      orders: [], // Lista de pedidos\r\n      cart: [], // Carrinho de compras\r\n      selectedOrder: null, // Pedido selecionado\r\n      showModal: false, // Controla a visibilidade do modal\r\n    };\r\n  },\r\n  computed: {\r\n    // Calcula o total do carrinho\r\n    cartTotal() {\r\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0); // Preço fixo\r\n    },\r\n  },\r\n  methods: {\r\n    // Exibe os detalhes do pedido no modal\r\n    showOrderDetails(order) {\r\n      this.selectedOrder = order;\r\n      this.showModal = true;\r\n    },\r\n    // Fecha o modal\r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.selectedOrder = null;\r\n    },\r\n    // Calcula o total do pedido\r\n    calculateTotal(order) {\r\n      return order.products.reduce((total, item) => total + item.quantity * item.unitPrice, 0);\r\n    },\r\n    // Adiciona um produto ao carrinho\r\n    addProductToCart(productId, quantity) {\r\n      const product = this.cart.find(item => item.productId === productId);\r\n      if (product) {\r\n        product.quantity += quantity;\r\n      } else {\r\n        this.cart.push({productId, quantity});\r\n      }\r\n    },\r\n    // Remove um produto do carrinho\r\n    removeProductFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    // Finaliza o pedido\r\n    placeOrder() {\r\n      const order = {\r\n        id: this.orders.length + 1,\r\n        userId: 1, // Exemplo de usuário, pode vir de localStorage ou Vuex\r\n        date: new Date().toISOString(),\r\n        products: [...this.cart],\r\n      };\r\n      this.orders.push(order);\r\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Salva no localStorage\r\n      this.cart = []; // Limpa o carrinho\r\n      alert(\"Pedido realizado com sucesso!\");\r\n    },\r\n    // Busca os pedidos do localStorage\r\n    fetchOrders() {\r\n      const savedOrders = JSON.parse(localStorage.getItem(\"orders\")) || [];\r\n      this.orders = savedOrders;\r\n    },\r\n    // Função de edição de pedido (a ser implementada conforme a lógica do seu app)\r\n    editOrder(order) {\r\n      console.log(\"Editar Pedido\", order);\r\n      // Implemente a lógica de edição do pedido aqui\r\n    },\r\n    // Função de exclusão de pedido\r\n    deleteOrder(order) {\r\n      const index = this.orders.findIndex(o => o.id === order.id);\r\n      if (index !== -1) {\r\n        this.orders.splice(index, 1);\r\n        localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Atualiza o localStorage\r\n        this.showModal = false;\r\n        alert(\"Pedido excluído com sucesso!\");\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchOrders(); // Carrega os pedidos do localStorage\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos para a página de pedidos */\r\n.container {\r\n  padding: 20px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n\r\n.order-modal {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-summary {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-summary ul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.cart-summary li {\r\n  margin: 5px 0;\r\n}\r\n\r\n/* Estilos para a tabela de detalhes do pedido */\r\n.order-details table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.order-details th, .order-details td {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n/* Estilos para os botões de ação */\r\n.order-actions button {\r\n  margin-top: 20px;\r\n  padding: 8px 16px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.order-actions button:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}