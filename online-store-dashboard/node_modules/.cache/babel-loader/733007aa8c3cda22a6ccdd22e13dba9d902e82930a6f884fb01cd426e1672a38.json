{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-content\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.order ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"Detalhes do Pedido\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($props.order.status || 'Não disponível'), 1 /* TEXT */)]), _createCommentVNode(\" Valor padrão caso o status não exista \"), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Vendedor:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.getVendedorName($props.order.userId)), 1 /* TEXT */)]), _createElementVNode(\"table\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Produto\"), _createElementVNode(\"th\", null, \"Quantidade\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.order.products, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString($options.getProductName(item.productId)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.quantity), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Quantidade Total:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.calculateTotalQuantity($props.order)), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Total:\", -1 /* HOISTED */)), _createTextVNode(\" R$ \" + _toDisplayString($options.calculateTotal($props.order)), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, \"Fechar\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"p\", null, \"Carregando...\", -1 /* HOISTED */)), _createCommentVNode(\" Exibe uma mensagem enquanto o pedido não está disponível \")]));\n}","map":{"version":3,"names":["key","class","$props","order","_createElementBlock","_hoisted_1","_createElementVNode","_createTextVNode","_toDisplayString","status","_createCommentVNode","$options","getVendedorName","userId","_Fragment","_renderList","products","item","index","getProductName","productId","quantity","calculateTotalQuantity","calculateTotal","onClick","_cache","$event","_ctx","$emit","_hoisted_2"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\components\\ModalCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal-content\" v-if=\"order\">\r\n    <h3>Detalhes do Pedido</h3>\r\n    <p><strong>Status:</strong> {{ order.status || 'Não disponível' }}</p> <!-- Valor padrão caso o status não exista -->\r\n    <p><strong>Vendedor:</strong> {{ getVendedorName(order.userId) }}</p>\r\n\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Produto</th>\r\n        <th>Quantidade</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(item, index) in order.products\" :key=\"index\">\r\n        <td>{{ getProductName(item.productId) }}</td>\r\n        <td>{{ item.quantity }}</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p><strong>Quantidade Total:</strong> {{ calculateTotalQuantity(order) }}</p>\r\n\r\n    <p><strong>Total:</strong> R$ {{ calculateTotal(order) }}</p>\r\n\r\n    <button @click=\"$emit('close')\">Fechar</button>\r\n  </div>\r\n  <div v-else>\r\n    <p>Carregando...</p> <!-- Exibe uma mensagem enquanto o pedido não está disponível -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ModalCart',\r\n  props: {\r\n    order: Object,\r\n    cartTotal: Number,\r\n  },\r\n  methods: {\r\n    // Obtém o nome do vendedor a partir do userId\r\n    getVendedorName(userId) {\r\n      const user = this.$store.state.users.find(user => user.id === userId);\r\n      return user ? `${user.firstName} ${user.lastName}` : 'Desconhecido';\r\n    },\r\n    // Obtém o nome do produto a partir do productId\r\n    getProductName(productId) {\r\n      const product = this.$store.state.products.find(product => product.id === productId);\r\n      return product ? product.name : 'Produto Desconhecido';\r\n    },\r\n    // Calcula a quantidade total de itens no pedido\r\n    calculateTotalQuantity(order) {\r\n      return order.products.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    // Calcula o valor total do pedido\r\n    calculateTotal(order) {\r\n      return order.products.reduce((total, item) => total + item.quantity * item.unitPrice, 0);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal-content {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\nbutton {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>"],"mappings":";;EAAAA,GAAA;EACOC,KAAK,EAAC;;;EADbD,GAAA;AAAA;;SACmCE,MAAA,CAAAC,KAAK,I,cAAtCC,mBAAA,CAyBM,OAzBNC,UAyBM,G,0BAxBJC,mBAAA,CAA2B,YAAvB,oBAAkB,sBACtBA,mBAAA,CAAsE,Y,0BAAnEA,mBAAA,CAAwB,gBAAhB,SAAO,sBAHtBC,gBAAA,CAG+B,GAAC,GAAAC,gBAAA,CAAGN,MAAA,CAAAC,KAAK,CAACM,MAAM,qC,GAA4BC,mBAAA,2CAA8C,EACrHJ,mBAAA,CAAqE,Y,0BAAlEA,mBAAA,CAA0B,gBAAlB,WAAS,sBAJxBC,gBAAA,CAIiC,GAAC,GAAAC,gBAAA,CAAGG,QAAA,CAAAC,eAAe,CAACV,MAAA,CAAAC,KAAK,CAACU,MAAM,kB,GAE7DP,mBAAA,CAaQ,gB,0BAZNA,mBAAA,CAKQ,gBAJRA,mBAAA,CAGK,aAFHA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAmB,YAAf,YAAU,E,wBAGhBA,mBAAA,CAKQ,iB,kBAJRF,mBAAA,CAGKU,SAAA,QAjBXC,WAAA,CAckCb,MAAA,CAAAC,KAAK,CAACa,QAAQ,EAdhD,CAckBC,IAAI,EAAEC,KAAK;yBAAvBd,mBAAA,CAGK;MAHwCJ,GAAG,EAAEkB;IAAK,IACrDZ,mBAAA,CAA6C,YAAAE,gBAAA,CAAtCG,QAAA,CAAAQ,cAAc,CAACF,IAAI,CAACG,SAAS,mBACpCd,mBAAA,CAA4B,YAAAE,gBAAA,CAArBS,IAAI,CAACI,QAAQ,iB;sCAKxBf,mBAAA,CAA6E,Y,0BAA1EA,mBAAA,CAAkC,gBAA1B,mBAAiB,sBArBhCC,gBAAA,CAqByC,GAAC,GAAAC,gBAAA,CAAGG,QAAA,CAAAW,sBAAsB,CAACpB,MAAA,CAAAC,KAAK,kB,GAErEG,mBAAA,CAA6D,Y,0BAA1DA,mBAAA,CAAuB,gBAAf,QAAM,sBAvBrBC,gBAAA,CAuB8B,MAAI,GAAAC,gBAAA,CAAGG,QAAA,CAAAY,cAAc,CAACrB,MAAA,CAAAC,KAAK,kB,GAErDG,mBAAA,CAA+C;IAAtCkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAW,QAAM,E,oBAExCxB,mBAAA,CAEM,OA7BRyB,UAAA,G,0BA4BIvB,mBAAA,CAAoB,WAAjB,eAAa,sBAAKI,mBAAA,8DAAiE,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}