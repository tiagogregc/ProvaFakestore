{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport OrderTable from \"@/components/OrderTable.vue\";\nimport ModalCart from \"@/components/ModalCart.vue\"; // Importando o componente\nimport axios from 'axios'; // Importando axios para realizar a requisição API\n\nexport default {\n  name: \"OrderList\",\n  components: {\n    OrderTable,\n    ModalCart // Registrando o componente\n  },\n  data() {\n    return {\n      orders: [],\n      cart: [],\n      showCartModal: false,\n      // Controle do modal do carrinho\n      showOrderDetailsModal: false,\n      // Controle do modal de detalhes do pedido\n      selectedOrder: null,\n      // Pedido selecionado para visualização\n      sellerName: '' // Nome do vendedor a ser exibido\n    };\n  },\n  computed: {\n    cartTotal() {\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0);\n    }\n  },\n  methods: {\n    // Recupera o nome do vendedor via API com base no userId\n    fetchSellerName(userId) {\n      axios.get(`/api/users/${userId}`) // Ajuste para a URL da sua API\n      .then(response => {\n        this.sellerName = `${response.data.firstName} ${response.data.lastName}`;\n      }).catch(error => {\n        console.error(\"Erro ao buscar o vendedor:\", error);\n        this.sellerName = 'Vendedor não encontrado';\n      });\n    },\n    // Abre o modal do carrinho\n    openCartModal() {\n      this.showCartModal = true;\n    },\n    // Fecha o modal do carrinho\n    closeCartModal() {\n      this.showCartModal = false;\n    },\n    // Remove um produto do carrinho\n    removeProductFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    // Finaliza o pedido\n    placeOrder() {\n      const order = {\n        id: this.orders.length + 1,\n        userId: 1,\n        // Exemplo de userId\n        date: new Date().toISOString(),\n        status: 'Pendente',\n        products: [...this.cart]\n      };\n      this.orders.push(order);\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders));\n      this.cart = [];\n      alert(\"Pedido realizado com sucesso!\");\n      this.closeCartModal(); // Fecha o modal após realizar o pedido\n    },\n    // Recupera os pedidos salvos no localStorage\n    fetchOrders() {\n      const savedOrders = JSON.parse(localStorage.getItem(\"orders\")) || [];\n      this.orders = savedOrders;\n    },\n    // Exibe os detalhes do pedido no modal\n    showOrderDetails(order) {\n      this.selectedOrder = order;\n      this.fetchSellerName(order.userId); // Chama a API para pegar o nome do vendedor\n      this.showOrderDetailsModal = true;\n    },\n    // Fecha o modal de detalhes do pedido\n    closeOrderDetailsModal() {\n      this.showOrderDetailsModal = false;\n    }\n  },\n  created() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["OrderTable","ModalCart","axios","name","components","data","orders","cart","showCartModal","showOrderDetailsModal","selectedOrder","sellerName","computed","cartTotal","reduce","total","item","quantity","methods","fetchSellerName","userId","get","then","response","firstName","lastName","catch","error","console","openCartModal","closeCartModal","removeProductFromCart","index","splice","placeOrder","order","id","length","date","Date","toISOString","status","products","push","localStorage","setItem","JSON","stringify","alert","fetchOrders","savedOrders","parse","getItem","showOrderDetails","closeOrderDetailsModal","created"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\views\\OrdersList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>Pedidos</h2>\r\n    <OrderTable :orders=\"orders\" @viewOrder=\"showOrderDetails\" />\r\n\r\n    <!-- Modal para Carrinho -->\r\n    <div v-if=\"showCartModal\" class=\"cart-modal\">\r\n      <ModalCart\r\n          :cart=\"cart\"\r\n          :cartTotal=\"cartTotal\"\r\n          :user=\"user\"\r\n          @close=\"closeCartModal\"\r\n          @remove-product=\"removeProductFromCart\"\r\n          @place-order=\"placeOrder\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Modal de Detalhes do Pedido -->\r\n    <div v-if=\"showOrderDetailsModal\" class=\"order-details-modal\">\r\n      <div class=\"modal-content\">\r\n        <h3>Detalhes do Pedido</h3>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>ID Pedido</th>\r\n            <th>Data e Hora</th>\r\n            <th>Status</th>\r\n            <th>Vendedor</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n            <td>{{ selectedOrder.id }}</td>\r\n            <td>{{ selectedOrder.date }}</td>\r\n            <td>{{ selectedOrder.status }}</td>\r\n            <td>{{ sellerName }}</td> <!-- Nome do vendedor -->\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <h4>Produtos no Pedido</h4>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>Nome do Produto</th>\r\n            <th>Quantidade</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(product, index) in selectedOrder.products\" :key=\"index\">\r\n            <td>{{ product.name }}</td> <!-- Nome do produto -->\r\n            <td>{{ product.quantity }}</td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <button @click=\"closeOrderDetailsModal\">Fechar</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"cart.length\" class=\"cart-summary\">\r\n      <h3>Carrinho</h3>\r\n      <ul>\r\n        <li v-for=\"(item, index) in cart\" :key=\"index\">\r\n          Produto {{ item.productId }} - Quantidade: {{ item.quantity }}\r\n          <button @click=\"removeProductFromCart(index)\">Remover</button>\r\n        </li>\r\n      </ul>\r\n      <p><strong>Total:</strong> {{ cartTotal }}</p>\r\n      <button @click=\"openCartModal\">Ver Carrinho</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport OrderTable from \"@/components/OrderTable.vue\";\r\nimport ModalCart from \"@/components/ModalCart.vue\"; // Importando o componente\r\nimport axios from 'axios'; // Importando axios para realizar a requisição API\r\n\r\nexport default {\r\n  name: \"OrderList\",\r\n  components: {\r\n    OrderTable,\r\n    ModalCart, // Registrando o componente\r\n  },\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      cart: [],\r\n      showCartModal: false, // Controle do modal do carrinho\r\n      showOrderDetailsModal: false, // Controle do modal de detalhes do pedido\r\n      selectedOrder: null, // Pedido selecionado para visualização\r\n      sellerName: '', // Nome do vendedor a ser exibido\r\n    };\r\n  },\r\n  computed: {\r\n    cartTotal() {\r\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0);\r\n    },\r\n  },\r\n  methods: {\r\n    // Recupera o nome do vendedor via API com base no userId\r\n    fetchSellerName(userId) {\r\n      axios.get(`/api/users/${userId}`) // Ajuste para a URL da sua API\r\n          .then(response => {\r\n            this.sellerName = `${response.data.firstName} ${response.data.lastName}`;\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Erro ao buscar o vendedor:\", error);\r\n            this.sellerName = 'Vendedor não encontrado';\r\n          });\r\n    },\r\n    // Abre o modal do carrinho\r\n    openCartModal() {\r\n      this.showCartModal = true;\r\n    },\r\n    // Fecha o modal do carrinho\r\n    closeCartModal() {\r\n      this.showCartModal = false;\r\n    },\r\n    // Remove um produto do carrinho\r\n    removeProductFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    // Finaliza o pedido\r\n    placeOrder() {\r\n      const order = {\r\n        id: this.orders.length + 1,\r\n        userId: 1, // Exemplo de userId\r\n        date: new Date().toISOString(),\r\n        status: 'Pendente',\r\n        products: [...this.cart],\r\n      };\r\n      this.orders.push(order);\r\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders));\r\n      this.cart = [];\r\n      alert(\"Pedido realizado com sucesso!\");\r\n      this.closeCartModal(); // Fecha o modal após realizar o pedido\r\n    },\r\n    // Recupera os pedidos salvos no localStorage\r\n    fetchOrders() {\r\n      const savedOrders = JSON.parse(localStorage.getItem(\"orders\")) || [];\r\n      this.orders = savedOrders;\r\n    },\r\n    // Exibe os detalhes do pedido no modal\r\n    showOrderDetails(order) {\r\n      this.selectedOrder = order;\r\n      this.fetchSellerName(order.userId); // Chama a API para pegar o nome do vendedor\r\n      this.showOrderDetailsModal = true;\r\n    },\r\n    // Fecha o modal de detalhes do pedido\r\n    closeOrderDetailsModal() {\r\n      this.showOrderDetailsModal = false;\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchOrders();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 20px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.cart-summary {\r\n  margin-top: 20px;\r\n  background-color: #f4f4f4;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.cart-summary ul {\r\n  list-style: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.cart-summary li {\r\n  margin: 5px 0;\r\n}\r\n\r\nbutton {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.cart-modal, .order-details-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  max-width: 700px;\r\n  width: 100%;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.total-order {\r\n  margin-top: 20px;\r\n  font-size: 1.2em;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}