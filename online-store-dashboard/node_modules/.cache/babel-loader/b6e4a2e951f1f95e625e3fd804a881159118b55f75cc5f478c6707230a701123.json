{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  name: 'ModalCart',\n  props: {\n    order: Object,\n    cartTotal: Number\n  },\n  methods: {\n    // Obtém o nome do vendedor a partir do userId\n    getVendedorName(userId) {\n      const user = this.$store.state.users.find(user => user.id === userId);\n      return user ? `${user.firstName} ${user.lastName}` : 'Desconhecido';\n    },\n    // Obtém o nome do produto a partir do productId\n    getProductName(productId) {\n      const product = this.$store.state.products.find(product => product.id === productId);\n      return product ? product.name : 'Produto Desconhecido';\n    },\n    // Calcula a quantidade total de itens no pedido\n    calculateTotalQuantity(order) {\n      return order.products.reduce((total, item) => total + item.quantity, 0);\n    },\n    // Calcula o valor total do pedido\n    calculateTotal(order) {\n      return order.products.reduce((total, item) => total + item.quantity * item.unitPrice, 0);\n    }\n  }\n};","map":{"version":3,"names":["name","props","order","Object","cartTotal","Number","methods","getVendedorName","userId","user","$store","state","users","find","id","firstName","lastName","getProductName","productId","product","products","calculateTotalQuantity","reduce","total","item","quantity","calculateTotal","unitPrice"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\components\\ModalCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal-content\">\r\n    <h3>Detalhes do Pedido</h3>\r\n    <p><strong>Status:</strong> {{ order.status }}</p>\r\n    <p><strong>Vendedor:</strong> {{ getVendedorName(order.userId) }}</p> <!-- Exibe o nome do vendedor -->\r\n\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Produto</th>\r\n        <th>Quantidade</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(item, index) in order.products\" :key=\"index\">\r\n        <td>{{ getProductName(item.productId) }}</td> <!-- Exibe o nome do produto -->\r\n        <td>{{ item.quantity }}</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p><strong>Quantidade Total:</strong> {{ calculateTotalQuantity(order) }}</p> <!-- Quantidade total -->\r\n\r\n    <p><strong>Total:</strong> R$ {{ calculateTotal(order) }}</p>\r\n\r\n    <button @click=\"$emit('close')\">Fechar</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ModalCart',\r\n  props: {\r\n    order: Object,\r\n    cartTotal: Number,\r\n  },\r\n  methods: {\r\n    // Obtém o nome do vendedor a partir do userId\r\n    getVendedorName(userId) {\r\n      const user = this.$store.state.users.find(user => user.id === userId);\r\n      return user ? `${user.firstName} ${user.lastName}` : 'Desconhecido';\r\n    },\r\n    // Obtém o nome do produto a partir do productId\r\n    getProductName(productId) {\r\n      const product = this.$store.state.products.find(product => product.id === productId);\r\n      return product ? product.name : 'Produto Desconhecido';\r\n    },\r\n    // Calcula a quantidade total de itens no pedido\r\n    calculateTotalQuantity(order) {\r\n      return order.products.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    // Calcula o valor total do pedido\r\n    calculateTotal(order) {\r\n      return order.products.reduce((total, item) => total + item.quantity * item.unitPrice, 0);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal-content {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\nbutton {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>"],"mappings":";;;AA8BA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM;IACbC,SAAS,EAAEC;EACb,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,eAAeA,CAACC,MAAM,EAAE;MACtB,MAAMC,IAAG,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,CAACC,IAAI,CAACJ,IAAG,IAAKA,IAAI,CAACK,EAAC,KAAMN,MAAM,CAAC;MACrE,OAAOC,IAAG,GAAI,GAAGA,IAAI,CAACM,SAAS,IAAIN,IAAI,CAACO,QAAQ,EAAC,GAAI,cAAc;IACrE,CAAC;IACD;IACAC,cAAcA,CAACC,SAAS,EAAE;MACxB,MAAMC,OAAM,GAAI,IAAI,CAACT,MAAM,CAACC,KAAK,CAACS,QAAQ,CAACP,IAAI,CAACM,OAAM,IAAKA,OAAO,CAACL,EAAC,KAAMI,SAAS,CAAC;MACpF,OAAOC,OAAM,GAAIA,OAAO,CAACnB,IAAG,GAAI,sBAAsB;IACxD,CAAC;IACD;IACAqB,sBAAsBA,CAACnB,KAAK,EAAE;MAC5B,OAAOA,KAAK,CAACkB,QAAQ,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACzE,CAAC;IACD;IACAC,cAAcA,CAACxB,KAAK,EAAE;MACpB,OAAOA,KAAK,CAACkB,QAAQ,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAO,GAAID,IAAI,CAACG,SAAS,EAAE,CAAC,CAAC;IAC1F;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}