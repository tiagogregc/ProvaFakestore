{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    products: JSON.parse(localStorage.getItem('products')) || [],\n    orders: JSON.parse(localStorage.getItem('orders')) || [],\n    // Carrega os pedidos do localStorage\n    users: JSON.parse(localStorage.getItem('users')) || [],\n    authToken: localStorage.getItem('authToken') || null\n  },\n  mutations: {\n    // Mutações para os produtos\n    setProducts(state, products) {\n      state.products = products;\n      localStorage.setItem('products', JSON.stringify(products));\n    },\n    addProduct(state, product) {\n      state.products.push(product);\n      localStorage.setItem('products', JSON.stringify(state.products));\n    },\n    removeProduct(state, productId) {\n      state.products = state.products.filter(product => product.id !== productId);\n      localStorage.setItem('products', JSON.stringify(state.products));\n    },\n    updateProduct(state, updatedProduct) {\n      const index = state.products.findIndex(product => product.id === updatedProduct.id);\n      if (index !== -1) {\n        state.products.splice(index, 1, updatedProduct);\n        localStorage.setItem('products', JSON.stringify(state.products));\n      }\n    },\n    // Mutações para os pedidos\n    setOrders(state, orders) {\n      state.orders = orders;\n      localStorage.setItem('orders', JSON.stringify(orders)); // Persiste os pedidos no localStorage\n    },\n    addOrder(state, order) {\n      state.orders.push(order);\n      localStorage.setItem('orders', JSON.stringify(state.orders));\n    },\n    removeOrder(state, orderId) {\n      state.orders = state.orders.filter(order => order.id !== orderId);\n      localStorage.setItem('orders', JSON.stringify(state.orders));\n    },\n    updateOrder(state, updatedOrder) {\n      const index = state.orders.findIndex(order => order.id === updatedOrder.id);\n      if (index !== -1) {\n        state.orders.splice(index, 1, updatedOrder);\n        localStorage.setItem('orders', JSON.stringify(state.orders));\n      }\n    },\n    // Mutações para os usuários\n    setUsers(state, users) {\n      state.users = users;\n      localStorage.setItem('users', JSON.stringify(users));\n    },\n    addUser(state, user) {\n      state.users.push(user);\n      localStorage.setItem('users', JSON.stringify(state.users));\n    },\n    removeUser(state, userId) {\n      state.users = state.users.filter(user => user.id !== userId);\n      localStorage.setItem('users', JSON.stringify(state.users));\n    },\n    updateUser(state, updatedUser) {\n      const index = state.users.findIndex(user => user.id === updatedUser.id);\n      if (index !== -1) {\n        state.users.splice(index, 1, updatedUser);\n        localStorage.setItem('users', JSON.stringify(state.users));\n      }\n    },\n    // Mutações de autenticação\n    setAuthToken(state, token) {\n      state.authToken = token;\n      if (token) {\n        localStorage.setItem('authToken', token);\n      } else {\n        localStorage.removeItem('authToken');\n      }\n    }\n  },\n  actions: {\n    // Ação para buscar produtos\n    async fetchProducts({\n      commit\n    }) {\n      try {\n        const response = await axios.get('https://fakestoreapi.com/products');\n        commit('setProducts', response.data);\n      } catch (error) {\n        console.error('Erro ao buscar produtos:', error);\n      }\n    },\n    // Ação para buscar pedidos\n    async fetchOrders({\n      commit\n    }) {\n      try {\n        const response = await axios.get('https://fakestoreapi.com/carts');\n        commit('setOrders', response.data);\n      } catch (error) {\n        console.error('Erro ao buscar pedidos:', error);\n      }\n    },\n    /// Ação para buscar detalhes de um pedido\n    async fetchOrderDetails({\n      commit,\n      state\n    }, orderId) {\n      try {\n        const order = state.orders.find(order => order.id === orderId);\n        if (!order) {\n          console.error('Pedido não encontrado.');\n          return;\n        }\n\n        // Enriquecer dados do pedido com informações de produtos e usuários\n        const user = state.users.find(user => user.id === order.userId); // Encontra o usuário\n        const products = order.products.map(product => {\n          const productDetails = state.products.find(p => p.id === product.productId);\n          return {\n            productName: productDetails?.title || 'Produto desconhecido',\n            unitPrice: productDetails?.price || 0,\n            ...product\n          };\n        });\n\n        // Enriquecer o pedido com o nome do vendedor\n        const vendedorNome = user ? `${user.firstName} ${user.lastName}` : 'Vendedor desconhecido';\n        const enrichedOrder = {\n          ...order,\n          user,\n          products,\n          vendedorNome // Inclui o nome do vendedor no pedido\n        };\n        commit('updateOrder', enrichedOrder);\n      } catch (error) {\n        console.error('Erro ao buscar detalhes do pedido:', error);\n      }\n    },\n    // Ação para buscar usuários\n    async fetchUsers({\n      commit\n    }) {\n      const users = JSON.parse(localStorage.getItem('users'));\n      if (!users || users.length === 0) {\n        try {\n          const response = await axios.get('https://fakestoreapi.com/users');\n          commit('setUsers', response.data);\n        } catch (error) {\n          console.error('Erro ao buscar usuários:', error);\n        }\n      } else {\n        commit('setUsers', users);\n      }\n    },\n    // Ação de login\n    async login({\n      commit\n    }, credentials) {\n      try {\n        const response = await axios.post('https://fakestoreapi.com/auth/login', credentials);\n        commit('setAuthToken', response.data.token);\n        alert('Login realizado com sucesso!');\n      } catch (error) {\n        console.error('Erro no login:', error);\n      }\n    },\n    // Ação de logout\n    logout({\n      commit\n    }) {\n      commit('setAuthToken', null);\n      alert('Logout realizado com sucesso!');\n    },\n    // Ações de pedidos\n    addOrder({\n      commit,\n      state\n    }, order) {\n      const newOrder = {\n        id: state.orders.length + 1,\n        date: new Date().toISOString(),\n        ...order\n      };\n      commit('addOrder', newOrder);\n    },\n    removeOrder({\n      commit\n    }, orderId) {\n      commit('removeOrder', orderId);\n    },\n    updateOrder({\n      commit\n    }, updatedOrder) {\n      commit('updateOrder', updatedOrder);\n    },\n    // Ações de produtos\n    addProduct({\n      commit\n    }, product) {\n      commit('addProduct', product);\n    },\n    removeProduct({\n      commit\n    }, productId) {\n      commit('removeProduct', productId);\n    },\n    updateProduct({\n      commit\n    }, updatedProduct) {\n      commit('updateProduct', updatedProduct);\n    },\n    // Ações de usuários\n    addUser({\n      commit\n    }, user) {\n      commit('addUser', user);\n    },\n    removeUser({\n      commit\n    }, userId) {\n      commit('removeUser', userId);\n    },\n    updateUser({\n      commit\n    }, updatedUser) {\n      commit('updateUser', updatedUser);\n    }\n  },\n  getters: {\n    isAuthenticated(state) {\n      return !!state.authToken;\n    },\n    getAllProducts(state) {\n      return state.products;\n    },\n    getProductById: state => id => {\n      return state.products.find(product => product.id === id);\n    },\n    getAllOrders(state) {\n      return state.orders;\n    },\n    getOrderById: state => id => {\n      return state.orders.find(order => order.id === id);\n    },\n    getAllUsers(state) {\n      return state.users;\n    },\n    getUserById: state => id => {\n      return state.users.find(user => user.id === id);\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","state","products","JSON","parse","localStorage","getItem","orders","users","authToken","mutations","setProducts","setItem","stringify","addProduct","product","push","removeProduct","productId","filter","id","updateProduct","updatedProduct","index","findIndex","splice","setOrders","addOrder","order","removeOrder","orderId","updateOrder","updatedOrder","setUsers","addUser","user","removeUser","userId","updateUser","updatedUser","setAuthToken","token","removeItem","actions","fetchProducts","commit","response","get","data","error","console","fetchOrders","fetchOrderDetails","find","map","productDetails","p","productName","title","unitPrice","price","vendedorNome","firstName","lastName","enrichedOrder","fetchUsers","length","login","credentials","post","alert","logout","newOrder","date","Date","toISOString","getters","isAuthenticated","getAllProducts","getProductById","getAllOrders","getOrderById","getAllUsers","getUserById"],"sources":["C:/Users/tiago/WebstormProjects/FakestoreS/online-store-dashboard/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default createStore({\r\n    state: {\r\n        products: JSON.parse(localStorage.getItem('products')) || [],\r\n        orders: JSON.parse(localStorage.getItem('orders')) || [],  // Carrega os pedidos do localStorage\r\n        users: JSON.parse(localStorage.getItem('users')) || [],\r\n        authToken: localStorage.getItem('authToken') || null,\r\n    },\r\n    mutations: {\r\n        // Mutações para os produtos\r\n        setProducts(state, products) {\r\n            state.products = products;\r\n            localStorage.setItem('products', JSON.stringify(products));\r\n        },\r\n        addProduct(state, product) {\r\n            state.products.push(product);\r\n            localStorage.setItem('products', JSON.stringify(state.products));\r\n        },\r\n        removeProduct(state, productId) {\r\n            state.products = state.products.filter(product => product.id !== productId);\r\n            localStorage.setItem('products', JSON.stringify(state.products));\r\n        },\r\n        updateProduct(state, updatedProduct) {\r\n            const index = state.products.findIndex(product => product.id === updatedProduct.id);\r\n            if (index !== -1) {\r\n                state.products.splice(index, 1, updatedProduct);\r\n                localStorage.setItem('products', JSON.stringify(state.products));\r\n            }\r\n        },\r\n\r\n        // Mutações para os pedidos\r\n        setOrders(state, orders) {\r\n            state.orders = orders;\r\n            localStorage.setItem('orders', JSON.stringify(orders)); // Persiste os pedidos no localStorage\r\n        },\r\n        addOrder(state, order) {\r\n            state.orders.push(order);\r\n            localStorage.setItem('orders', JSON.stringify(state.orders));\r\n        },\r\n        removeOrder(state, orderId) {\r\n            state.orders = state.orders.filter(order => order.id !== orderId);\r\n            localStorage.setItem('orders', JSON.stringify(state.orders));\r\n        },\r\n        updateOrder(state, updatedOrder) {\r\n            const index = state.orders.findIndex(order => order.id === updatedOrder.id);\r\n            if (index !== -1) {\r\n                state.orders.splice(index, 1, updatedOrder);\r\n                localStorage.setItem('orders', JSON.stringify(state.orders));\r\n            }\r\n        },\r\n\r\n        // Mutações para os usuários\r\n        setUsers(state, users) {\r\n            state.users = users;\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n        },\r\n        addUser(state, user) {\r\n            state.users.push(user);\r\n            localStorage.setItem('users', JSON.stringify(state.users));\r\n        },\r\n        removeUser(state, userId) {\r\n            state.users = state.users.filter(user => user.id !== userId);\r\n            localStorage.setItem('users', JSON.stringify(state.users));\r\n        },\r\n        updateUser(state, updatedUser) {\r\n            const index = state.users.findIndex(user => user.id === updatedUser.id);\r\n            if (index !== -1) {\r\n                state.users.splice(index, 1, updatedUser);\r\n                localStorage.setItem('users', JSON.stringify(state.users));\r\n            }\r\n        },\r\n\r\n        // Mutações de autenticação\r\n        setAuthToken(state, token) {\r\n            state.authToken = token;\r\n            if (token) {\r\n                localStorage.setItem('authToken', token);\r\n            } else {\r\n                localStorage.removeItem('authToken');\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        // Ação para buscar produtos\r\n        async fetchProducts({ commit }) {\r\n            try {\r\n                const response = await axios.get('https://fakestoreapi.com/products');\r\n                commit('setProducts', response.data);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar produtos:', error);\r\n            }\r\n        },\r\n\r\n        // Ação para buscar pedidos\r\n        async fetchOrders({ commit }) {\r\n            try {\r\n                const response = await axios.get('https://fakestoreapi.com/carts');\r\n                commit('setOrders', response.data);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar pedidos:', error);\r\n            }\r\n        },\r\n\r\n        /// Ação para buscar detalhes de um pedido\r\n        async fetchOrderDetails({ commit, state }, orderId) {\r\n            try {\r\n                const order = state.orders.find(order => order.id === orderId);\r\n                if (!order) {\r\n                    console.error('Pedido não encontrado.');\r\n                    return;\r\n                }\r\n\r\n                // Enriquecer dados do pedido com informações de produtos e usuários\r\n                const user = state.users.find(user => user.id === order.userId); // Encontra o usuário\r\n                const products = order.products.map(product => {\r\n                    const productDetails = state.products.find(p => p.id === product.productId);\r\n                    return {\r\n                        productName: productDetails?.title || 'Produto desconhecido',\r\n                        unitPrice: productDetails?.price || 0,\r\n                        ...product,\r\n                    };\r\n                });\r\n\r\n                // Enriquecer o pedido com o nome do vendedor\r\n                const vendedorNome = user ? `${user.firstName} ${user.lastName}` : 'Vendedor desconhecido';\r\n\r\n                const enrichedOrder = {\r\n                    ...order,\r\n                    user,\r\n                    products,\r\n                    vendedorNome // Inclui o nome do vendedor no pedido\r\n                };\r\n\r\n                commit('updateOrder', enrichedOrder);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar detalhes do pedido:', error);\r\n            }\r\n        },\r\n\r\n        // Ação para buscar usuários\r\n        async fetchUsers({ commit }) {\r\n            const users = JSON.parse(localStorage.getItem('users'));\r\n\r\n            if (!users || users.length === 0) {\r\n                try {\r\n                    const response = await axios.get('https://fakestoreapi.com/users');\r\n                    commit('setUsers', response.data);\r\n                } catch (error) {\r\n                    console.error('Erro ao buscar usuários:', error);\r\n                }\r\n            } else {\r\n                commit('setUsers', users);\r\n            }\r\n        },\r\n\r\n        // Ação de login\r\n        async login({ commit }, credentials) {\r\n            try {\r\n                const response = await axios.post('https://fakestoreapi.com/auth/login', credentials);\r\n                commit('setAuthToken', response.data.token);\r\n                alert('Login realizado com sucesso!');\r\n            } catch (error) {\r\n                console.error('Erro no login:', error);\r\n            }\r\n        },\r\n\r\n        // Ação de logout\r\n        logout({ commit }) {\r\n            commit('setAuthToken', null);\r\n            alert('Logout realizado com sucesso!');\r\n        },\r\n\r\n        // Ações de pedidos\r\n        addOrder({ commit, state }, order) {\r\n            const newOrder = {\r\n                id: state.orders.length + 1,\r\n                date: new Date().toISOString(),\r\n                ...order,\r\n            };\r\n            commit('addOrder', newOrder);\r\n        },\r\n        removeOrder({ commit }, orderId) {\r\n            commit('removeOrder', orderId);\r\n        },\r\n        updateOrder({ commit }, updatedOrder) {\r\n            commit('updateOrder', updatedOrder);\r\n        },\r\n\r\n        // Ações de produtos\r\n        addProduct({ commit }, product) {\r\n            commit('addProduct', product);\r\n        },\r\n        removeProduct({ commit }, productId) {\r\n            commit('removeProduct', productId);\r\n        },\r\n        updateProduct({ commit }, updatedProduct) {\r\n            commit('updateProduct', updatedProduct);\r\n        },\r\n\r\n        // Ações de usuários\r\n        addUser({ commit }, user) {\r\n            commit('addUser', user);\r\n        },\r\n        removeUser({ commit }, userId) {\r\n            commit('removeUser', userId);\r\n        },\r\n        updateUser({ commit }, updatedUser) {\r\n            commit('updateUser', updatedUser);\r\n        },\r\n    },\r\n    getters: {\r\n        isAuthenticated(state) {\r\n            return !!state.authToken;\r\n        },\r\n        getAllProducts(state) {\r\n            return state.products;\r\n        },\r\n        getProductById: (state) => (id) => {\r\n            return state.products.find(product => product.id === id);\r\n        },\r\n        getAllOrders(state) {\r\n            return state.orders;\r\n        },\r\n        getOrderById: (state) => (id) => {\r\n            return state.orders.find(order => order.id === id);\r\n        },\r\n        getAllUsers(state) {\r\n            return state.users;\r\n        },\r\n        getUserById: (state) => (id) => {\r\n            return state.users.find(user => user.id === id);\r\n        },\r\n    },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}