{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport OrderTable from \"@/components/OrderTable.vue\";\nimport Modal from \"@/components/ModalMode.vue\";\nexport default {\n  name: \"OrderList\",\n  components: {\n    OrderTable,\n    Modal\n  },\n  data() {\n    return {\n      orders: [],\n      // Lista de pedidos\n      cart: [],\n      // Carrinho de compras\n      selectedOrder: null,\n      // Pedido selecionado\n      showModal: false // Controla a visibilidade do modal\n    };\n  },\n  computed: {\n    // Calcula o total do carrinho\n    cartTotal() {\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0); // Preço fixo\n    }\n  },\n  methods: {\n    // Exibe os detalhes do pedido no modal\n    showOrderDetails(order) {\n      this.selectedOrder = order;\n      this.showModal = true;\n    },\n    // Fecha o modal\n    closeModal() {\n      this.showModal = false;\n      this.selectedOrder = null;\n    },\n    // Calcula o total do pedido\n    calculateTotal(order) {\n      return order.products.reduce((total, item) => total + item.quantity * item.unitPrice, 0);\n    },\n    // Adiciona um produto ao carrinho\n    addProductToCart(productId, quantity) {\n      const product = this.cart.find(item => item.productId === productId);\n      if (product) {\n        product.quantity += quantity;\n      } else {\n        this.cart.push({\n          productId,\n          quantity\n        });\n      }\n    },\n    // Remove um produto do carrinho\n    removeProductFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    // Finaliza o pedido\n    placeOrder() {\n      const order = {\n        id: this.orders.length + 1,\n        userId: 1,\n        // Exemplo de usuário, pode vir de localStorage ou Vuex\n        date: new Date().toISOString(),\n        products: [...this.cart]\n      };\n      this.orders.push(order);\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Salva no localStorage\n      this.cart = []; // Limpa o carrinho\n      alert(\"Pedido realizado com sucesso!\");\n    },\n    // Busca os pedidos do localStorage\n    fetchOrders() {\n      const savedOrders = JSON.parse(localStorage.getItem(\"orders\")) || [];\n      this.orders = savedOrders;\n    },\n    // Função de edição de pedido (a ser implementada conforme a lógica do seu app)\n    editOrder(order) {\n      console.log(\"Editar Pedido\", order);\n      // Implemente a lógica de edição do pedido aqui\n    },\n    // Função de exclusão de pedido\n    deleteOrder(order) {\n      const index = this.orders.findIndex(o => o.id === order.id);\n      if (index !== -1) {\n        this.orders.splice(index, 1);\n        localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Atualiza o localStorage\n        this.showModal = false;\n        alert(\"Pedido excluído com sucesso!\");\n      }\n    }\n  },\n  created() {\n    this.fetchOrders(); // Carrega os pedidos do localStorage\n  }\n};","map":{"version":3,"names":["OrderTable","Modal","name","components","data","orders","cart","selectedOrder","showModal","computed","cartTotal","reduce","total","item","quantity","methods","showOrderDetails","order","closeModal","calculateTotal","products","unitPrice","addProductToCart","productId","product","find","push","removeProductFromCart","index","splice","placeOrder","id","length","userId","date","Date","toISOString","localStorage","setItem","JSON","stringify","alert","fetchOrders","savedOrders","parse","getItem","editOrder","console","log","deleteOrder","findIndex","o","created"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\views\\OrdersList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>Pedidos</h2>\r\n    <!-- Exibindo tabela de pedidos e ouvindo o evento para exibir detalhes -->\r\n    <OrderTable :orders=\"orders\" @viewOrder=\"showOrderDetails\" />\r\n\r\n    <!-- Modal para exibir detalhes do pedido -->\r\n    <div v-if=\"showModal\" class=\"order-modal\">\r\n      <Modal @close=\"closeModal\">\r\n        <div v-if=\"selectedOrder\">\r\n          <h3>Pedido {{ selectedOrder.id }}</h3>\r\n          <p><strong>Vendedor:</strong> {{ selectedOrder.user.firstname }} {{ selectedOrder.user.lastname }}</p>\r\n          <p><strong>Data e Hora:</strong> {{ selectedOrder.date }}</p>\r\n\r\n          <!-- Tabela com detalhes do pedido -->\r\n          <div class=\"order-details\">\r\n            <table>\r\n              <thead>\r\n              <tr>\r\n                <th>Produto</th>\r\n                <th>Quantidade</th>\r\n                <th>Valor Unitário</th>\r\n                <th>Valor Produto</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(item, index) in selectedOrder.products\" :key=\"index\">\r\n                <td>{{ item.productName }}</td>\r\n                <td>{{ item.quantity }}</td>\r\n                <td>{{ item.unitPrice }}</td>\r\n                <td>{{ item.quantity * item.unitPrice }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <h4>Total do Pedido: {{ calculateTotal(selectedOrder) }}</h4>\r\n          </div>\r\n\r\n          <!-- Botões para ações de editar ou excluir o pedido -->\r\n          <div class=\"order-actions\">\r\n            <button @click=\"editOrder(selectedOrder)\">Alterar Pedido</button>\r\n            <button @click=\"deleteOrder(selectedOrder)\">Excluir Pedido</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n\r\n    <!-- Exibição do carrinho de compras -->\r\n    <div v-if=\"cart.length\" class=\"cart-summary\">\r\n      <h3>Carrinho</h3>\r\n      <ul>\r\n        <li v-for=\"(item, index) in cart\" :key=\"index\">\r\n          Produto {{ item.productId }} - Quantidade: {{ item.quantity }}\r\n          <button @click=\"removeProductFromCart(index)\">Remover</button>\r\n        </li>\r\n      </ul>\r\n      <p><strong>Total: </strong>{{ cartTotal }}</p>\r\n      <button @click=\"placeOrder\">Finalizar Pedido</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport OrderTable from \"@/components/OrderTable.vue\";\r\nimport Modal from \"@/components/ModalMode.vue\";\r\n\r\nexport default {\r\n  name: \"OrderList\",\r\n  components: {\r\n    OrderTable,\r\n    Modal,\r\n  },\r\n  data() {\r\n    return {\r\n      orders: [], // Lista de pedidos\r\n      cart: [], // Carrinho de compras\r\n      selectedOrder: null, // Pedido selecionado\r\n      showModal: false, // Controla a visibilidade do modal\r\n    };\r\n  },\r\n  computed: {\r\n    // Calcula o total do carrinho\r\n    cartTotal() {\r\n      return this.cart.reduce((total, item) => total + item.quantity * 10, 0); // Preço fixo\r\n    },\r\n  },\r\n  methods: {\r\n    // Exibe os detalhes do pedido no modal\r\n    showOrderDetails(order) {\r\n      this.selectedOrder = order;\r\n      this.showModal = true;\r\n    },\r\n    // Fecha o modal\r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.selectedOrder = null;\r\n    },\r\n    // Calcula o total do pedido\r\n    calculateTotal(order) {\r\n      return order.products.reduce((total, item) => total + item.quantity * item.unitPrice, 0);\r\n    },\r\n    // Adiciona um produto ao carrinho\r\n    addProductToCart(productId, quantity) {\r\n      const product = this.cart.find(item => item.productId === productId);\r\n      if (product) {\r\n        product.quantity += quantity;\r\n      } else {\r\n        this.cart.push({productId, quantity});\r\n      }\r\n    },\r\n    // Remove um produto do carrinho\r\n    removeProductFromCart(index) {\r\n      this.cart.splice(index, 1);\r\n    },\r\n    // Finaliza o pedido\r\n    placeOrder() {\r\n      const order = {\r\n        id: this.orders.length + 1,\r\n        userId: 1, // Exemplo de usuário, pode vir de localStorage ou Vuex\r\n        date: new Date().toISOString(),\r\n        products: [...this.cart],\r\n      };\r\n      this.orders.push(order);\r\n      localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Salva no localStorage\r\n      this.cart = []; // Limpa o carrinho\r\n      alert(\"Pedido realizado com sucesso!\");\r\n    },\r\n    // Busca os pedidos do localStorage\r\n    fetchOrders() {\r\n      const savedOrders = JSON.parse(localStorage.getItem(\"orders\")) || [];\r\n      this.orders = savedOrders;\r\n    },\r\n    // Função de edição de pedido (a ser implementada conforme a lógica do seu app)\r\n    editOrder(order) {\r\n      console.log(\"Editar Pedido\", order);\r\n      // Implemente a lógica de edição do pedido aqui\r\n    },\r\n    // Função de exclusão de pedido\r\n    deleteOrder(order) {\r\n      const index = this.orders.findIndex(o => o.id === order.id);\r\n      if (index !== -1) {\r\n        this.orders.splice(index, 1);\r\n        localStorage.setItem(\"orders\", JSON.stringify(this.orders)); // Atualiza o localStorage\r\n        this.showModal = false;\r\n        alert(\"Pedido excluído com sucesso!\");\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchOrders(); // Carrega os pedidos do localStorage\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos para a página de pedidos */\r\n.container {\r\n  padding: 20px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n\r\n.order-modal {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-summary {\r\n  margin-top: 20px;\r\n}\r\n\r\n.cart-summary ul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.cart-summary li {\r\n  margin: 5px 0;\r\n}\r\n\r\n/* Estilos para a tabela de detalhes do pedido */\r\n.order-details table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.order-details th, .order-details td {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n/* Estilos para os botões de ação */\r\n.order-actions button {\r\n  margin-top: 20px;\r\n  padding: 8px 16px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.order-actions button:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}