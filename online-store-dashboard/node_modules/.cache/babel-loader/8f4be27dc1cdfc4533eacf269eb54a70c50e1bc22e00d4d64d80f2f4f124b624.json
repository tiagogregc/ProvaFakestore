{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nexport default {\n  name: \"UserLogin\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      // Verificar se o usuário está no localStorage\n      const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n      const user = users.find(user => user.username === this.username && user.password === this.password);\n      if (user) {\n        // Usuário encontrado no localStorage, login bem-sucedido\n        const token = \"fake-token\"; // O token fictício, pois a autenticação real é feita sem a API\n\n        // Armazena o token no localStorage\n        localStorage.setItem(\"authToken\", token);\n\n        // Atualiza o token no Vuex\n        this.$store.commit(\"setAuthToken\", token);\n\n        // Mensagem de Boas Vindas\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user)); // Armazena as informações do usuário no localStorage\n\n        // Redireciona para a página inicial\n        this.$router.push(\"/\");\n      } else {\n        // Caso o usuário não seja encontrado no localStorage, tentamos fazer o login com a API\n        try {\n          const response = await this.$axios.post(\"https://fakestoreapi.com/auth/login\", {\n            username: this.username,\n            password: this.password\n          });\n          if (response.data && response.data.token) {\n            // Armazena o token para uso futuro\n            localStorage.setItem(\"authToken\", response.data.token);\n\n            // Atualiza o token no Vuex\n            this.$store.commit(\"setAuthToken\", response.data.token);\n\n            // Atualiza os usuários após login\n            await this.$store.dispatch(\"fetchUsers\");\n\n            // Redireciona o usuário para a página inicial\n            this.$router.push(\"/\");\n          } else {\n            this.errorMessage = \"Credenciais inválidas. Tente novamente.\";\n          }\n        } catch (error) {\n          console.error(\"Erro no login:\", error);\n          this.errorMessage = \"Erro ao fazer login. Verifique suas credenciais ou tente novamente mais tarde.\";\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","errorMessage","methods","login","users","JSON","parse","localStorage","getItem","user","find","token","setItem","$store","commit","stringify","response","$router","push","$axios","post","dispatch","error","console"],"sources":["C:\\Users\\tiago\\WebstormProjects\\FakestoreS\\online-store-dashboard\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div class=\"form-group\">\r\n        <input\r\n            v-model=\"username\"\r\n            placeholder=\"Usuário\"\r\n            required\r\n            class=\"input-field\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input\r\n            v-model=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            required\r\n            class=\"input-field\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"login-button\">Entrar</button>\r\n      <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserLogin\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      // Verificar se o usuário está no localStorage\r\n      const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\n      const user = users.find(\r\n          (user) => user.username === this.username && user.password === this.password\r\n      );\r\n\r\n      if (user) {\r\n        // Usuário encontrado no localStorage, login bem-sucedido\r\n        const token = \"fake-token\"; // O token fictício, pois a autenticação real é feita sem a API\r\n\r\n        // Armazena o token no localStorage\r\n        localStorage.setItem(\"authToken\", token);\r\n\r\n        // Atualiza o token no Vuex\r\n        this.$store.commit(\"setAuthToken\", token);\r\n\r\n        // Mensagem de Boas Vindas\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));  // Armazena as informações do usuário no localStorage\r\n\r\n        // Redireciona para a página inicial\r\n        this.$router.push(\"/\");\r\n\r\n      } else {\r\n        // Caso o usuário não seja encontrado no localStorage, tentamos fazer o login com a API\r\n        try {\r\n          const response = await this.$axios.post(\r\n              \"https://fakestoreapi.com/auth/login\",\r\n              {\r\n                username: this.username,\r\n                password: this.password,\r\n              }\r\n          );\r\n\r\n          if (response.data && response.data.token) {\r\n            // Armazena o token para uso futuro\r\n            localStorage.setItem(\"authToken\", response.data.token);\r\n\r\n            // Atualiza o token no Vuex\r\n            this.$store.commit(\"setAuthToken\", response.data.token);\r\n\r\n            // Atualiza os usuários após login\r\n            await this.$store.dispatch(\"fetchUsers\");\r\n\r\n            // Redireciona o usuário para a página inicial\r\n            this.$router.push(\"/\");\r\n          } else {\r\n            this.errorMessage = \"Credenciais inválidas. Tente novamente.\";\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erro no login:\", error);\r\n          this.errorMessage =\r\n              \"Erro ao fazer login. Verifique suas credenciais ou tente novamente mais tarde.\";\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos do formulário */\r\n.container {\r\n  padding: 20px;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.input-field:focus {\r\n  outline: none;\r\n  border-color: #3498db;\r\n  box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: white;\r\n  background-color: #3498db;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.error-message {\r\n  color: #e74c3c;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n</style>"],"mappings":";;;AA4BA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ;MACA,MAAMC,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE;MAE7D,MAAMC,IAAG,GAAIL,KAAK,CAACM,IAAI,CAClBD,IAAI,IAAKA,IAAI,CAACV,QAAO,KAAM,IAAI,CAACA,QAAO,IAAKU,IAAI,CAACT,QAAO,KAAM,IAAI,CAACA,QACxE,CAAC;MAED,IAAIS,IAAI,EAAE;QACR;QACA,MAAME,KAAI,GAAI,YAAY,EAAE;;QAE5B;QACAJ,YAAY,CAACK,OAAO,CAAC,WAAW,EAAED,KAAK,CAAC;;QAExC;QACA,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEH,KAAK,CAAC;;QAEzC;QACAJ,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACU,SAAS,CAACC,QAAQ,CAAClB,IAAI,CAACW,IAAI,CAAC,CAAC,EAAG;;QAEnE;QACA,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MAExB,OAAO;QACL;QACA,IAAI;UACF,MAAMF,QAAO,GAAI,MAAM,IAAI,CAACG,MAAM,CAACC,IAAI,CACnC,qCAAqC,EACrC;YACErB,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBC,QAAQ,EAAE,IAAI,CAACA;UACjB,CACJ,CAAC;UAED,IAAIgB,QAAQ,CAAClB,IAAG,IAAKkB,QAAQ,CAAClB,IAAI,CAACa,KAAK,EAAE;YACxC;YACAJ,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEI,QAAQ,CAAClB,IAAI,CAACa,KAAK,CAAC;;YAEtD;YACA,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEE,QAAQ,CAAClB,IAAI,CAACa,KAAK,CAAC;;YAEvD;YACA,MAAM,IAAI,CAACE,MAAM,CAACQ,QAAQ,CAAC,YAAY,CAAC;;YAExC;YACA,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;UACxB,OAAO;YACL,IAAI,CAACjB,YAAW,GAAI,yCAAyC;UAC/D;QACF,EAAE,OAAOqB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;UACtC,IAAI,CAACrB,YAAW,GACZ,gFAAgF;QACtF;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}